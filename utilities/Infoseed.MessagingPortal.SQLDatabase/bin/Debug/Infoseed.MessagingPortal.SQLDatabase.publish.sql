/*
Deployment script for Hasan2

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "Hasan2"
:setvar DefaultFilePrefix "Hasan2"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL15.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL15.MSSQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [master];


GO

IF (DB_ID(N'$(DatabaseName)') IS NOT NULL) 
BEGIN
    ALTER DATABASE [$(DatabaseName)]
    SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
    DROP DATABASE [$(DatabaseName)];
END

GO
PRINT N'Creating $(DatabaseName)...'
GO
CREATE DATABASE [$(DatabaseName)]
    ON 
    PRIMARY(NAME = [$(DatabaseName)], FILENAME = N'$(DefaultDataPath)$(DefaultFilePrefix)_Primary.mdf')
    LOG ON (NAME = [$(DatabaseName)_log], FILENAME = N'$(DefaultLogPath)$(DefaultFilePrefix)_Primary.ldf') COLLATE SQL_Latin1_General_CP1_CI_AS
GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CLOSE OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                NUMERIC_ROUNDABORT OFF,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL,
                RECOVERY FULL,
                CURSOR_CLOSE_ON_COMMIT OFF,
                AUTO_CREATE_STATISTICS ON,
                AUTO_SHRINK OFF,
                AUTO_UPDATE_STATISTICS ON,
                RECURSIVE_TRIGGERS OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET READ_COMMITTED_SNAPSHOT OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_UPDATE_STATISTICS_ASYNC OFF,
                PAGE_VERIFY NONE,
                DATE_CORRELATION_OPTIMIZATION OFF,
                DISABLE_BROKER,
                PARAMETERIZATION SIMPLE,
                SUPPLEMENTAL_LOGGING OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET TRUSTWORTHY OFF,
        DB_CHAINING OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET HONOR_BROKER_PRIORITY OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET FILESTREAM(NON_TRANSACTED_ACCESS = OFF),
                CONTAINMENT = NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CREATE_STATISTICS ON(INCREMENTAL = OFF),
                MEMORY_OPTIMIZED_ELEVATE_TO_SNAPSHOT = OFF,
                DELAYED_DURABILITY = DISABLED 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (QUERY_CAPTURE_MODE = ALL, DATA_FLUSH_INTERVAL_SECONDS = 900, INTERVAL_LENGTH_MINUTES = 60, MAX_PLANS_PER_QUERY = 200, CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 367), MAX_STORAGE_SIZE_MB = 100) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE = OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE SCOPED CONFIGURATION SET MAXDOP = 0;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET MAXDOP = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET LEGACY_CARDINALITY_ESTIMATION = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET LEGACY_CARDINALITY_ESTIMATION = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET PARAMETER_SNIFFING = ON;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET PARAMETER_SNIFFING = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET QUERY_OPTIMIZER_HOTFIXES = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET QUERY_OPTIMIZER_HOTFIXES = PRIMARY;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET TEMPORAL_HISTORY_RETENTION ON 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF fulltextserviceproperty(N'IsFulltextInstalled') = 1
    EXECUTE sp_fulltext_database 'enable';


GO
PRINT N'Creating [HangFire]...';


GO
CREATE SCHEMA [HangFire]
    AUTHORIZATION [dbo];


GO
PRINT N'Creating [HangFire].[Set]...';


GO
CREATE TABLE [HangFire].[Set] (
    [Key]      NVARCHAR (100) NOT NULL,
    [Score]    FLOAT (53)     NOT NULL,
    [Value]    NVARCHAR (256) NOT NULL,
    [ExpireAt] DATETIME       NULL,
    CONSTRAINT [PK_HangFire_Set] PRIMARY KEY CLUSTERED ([Key] ASC, [Value] ASC)
);


GO
PRINT N'Creating [HangFire].[Set].[IX_HangFire_Set_ExpireAt]...';


GO
CREATE NONCLUSTERED INDEX [IX_HangFire_Set_ExpireAt]
    ON [HangFire].[Set]([ExpireAt] ASC) WHERE ([ExpireAt] IS NOT NULL);


GO
PRINT N'Creating [HangFire].[Set].[IX_HangFire_Set_Score]...';


GO
CREATE NONCLUSTERED INDEX [IX_HangFire_Set_Score]
    ON [HangFire].[Set]([Key] ASC, [Score] ASC);


GO
PRINT N'Creating [HangFire].[List]...';


GO
CREATE TABLE [HangFire].[List] (
    [Id]       BIGINT         IDENTITY (1, 1) NOT NULL,
    [Key]      NVARCHAR (100) NOT NULL,
    [Value]    NVARCHAR (MAX) NULL,
    [ExpireAt] DATETIME       NULL,
    CONSTRAINT [PK_HangFire_List] PRIMARY KEY CLUSTERED ([Key] ASC, [Id] ASC)
);


GO
PRINT N'Creating [HangFire].[List].[IX_HangFire_List_ExpireAt]...';


GO
CREATE NONCLUSTERED INDEX [IX_HangFire_List_ExpireAt]
    ON [HangFire].[List]([ExpireAt] ASC) WHERE ([ExpireAt] IS NOT NULL);


GO
PRINT N'Creating [HangFire].[Server]...';


GO
CREATE TABLE [HangFire].[Server] (
    [Id]            NVARCHAR (100) NOT NULL,
    [Data]          NVARCHAR (MAX) NULL,
    [LastHeartbeat] DATETIME       NOT NULL,
    CONSTRAINT [PK_HangFire_Server] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [HangFire].[Server].[IX_HangFire_Server_LastHeartbeat]...';


GO
CREATE NONCLUSTERED INDEX [IX_HangFire_Server_LastHeartbeat]
    ON [HangFire].[Server]([LastHeartbeat] ASC);


GO
PRINT N'Creating [HangFire].[JobQueue]...';


GO
CREATE TABLE [HangFire].[JobQueue] (
    [Id]        INT           IDENTITY (1, 1) NOT NULL,
    [JobId]     BIGINT        NOT NULL,
    [Queue]     NVARCHAR (50) NOT NULL,
    [FetchedAt] DATETIME      NULL,
    CONSTRAINT [PK_HangFire_JobQueue] PRIMARY KEY CLUSTERED ([Queue] ASC, [Id] ASC)
);


GO
PRINT N'Creating [HangFire].[JobParameter]...';


GO
CREATE TABLE [HangFire].[JobParameter] (
    [JobId] BIGINT         NOT NULL,
    [Name]  NVARCHAR (40)  NOT NULL,
    [Value] NVARCHAR (MAX) NULL,
    CONSTRAINT [PK_HangFire_JobParameter] PRIMARY KEY CLUSTERED ([JobId] ASC, [Name] ASC)
);


GO
PRINT N'Creating [HangFire].[State]...';


GO
CREATE TABLE [HangFire].[State] (
    [Id]        BIGINT         IDENTITY (1, 1) NOT NULL,
    [JobId]     BIGINT         NOT NULL,
    [Name]      NVARCHAR (20)  NOT NULL,
    [Reason]    NVARCHAR (100) NULL,
    [CreatedAt] DATETIME       NOT NULL,
    [Data]      NVARCHAR (MAX) NULL,
    CONSTRAINT [PK_HangFire_State] PRIMARY KEY CLUSTERED ([JobId] ASC, [Id] ASC)
);


GO
PRINT N'Creating [HangFire].[Job]...';


GO
CREATE TABLE [HangFire].[Job] (
    [Id]             BIGINT         IDENTITY (1, 1) NOT NULL,
    [StateId]        BIGINT         NULL,
    [StateName]      NVARCHAR (20)  NULL,
    [InvocationData] NVARCHAR (MAX) NOT NULL,
    [Arguments]      NVARCHAR (MAX) NOT NULL,
    [CreatedAt]      DATETIME       NOT NULL,
    [ExpireAt]       DATETIME       NULL,
    CONSTRAINT [PK_HangFire_Job] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [HangFire].[Job].[IX_HangFire_Job_ExpireAt]...';


GO
CREATE NONCLUSTERED INDEX [IX_HangFire_Job_ExpireAt]
    ON [HangFire].[Job]([ExpireAt] ASC)
    INCLUDE([StateName]) WHERE ([ExpireAt] IS NOT NULL);


GO
PRINT N'Creating [HangFire].[Job].[IX_HangFire_Job_StateName]...';


GO
CREATE NONCLUSTERED INDEX [IX_HangFire_Job_StateName]
    ON [HangFire].[Job]([StateName] ASC) WHERE ([StateName] IS NOT NULL);


GO
PRINT N'Creating [HangFire].[Schema]...';


GO
CREATE TABLE [HangFire].[Schema] (
    [Version] INT NOT NULL,
    CONSTRAINT [PK_HangFire_Schema] PRIMARY KEY CLUSTERED ([Version] ASC)
);


GO
PRINT N'Creating [HangFire].[AggregatedCounter]...';


GO
CREATE TABLE [HangFire].[AggregatedCounter] (
    [Key]      NVARCHAR (100) NOT NULL,
    [Value]    BIGINT         NOT NULL,
    [ExpireAt] DATETIME       NULL,
    CONSTRAINT [PK_HangFire_CounterAggregated] PRIMARY KEY CLUSTERED ([Key] ASC)
);


GO
PRINT N'Creating [HangFire].[AggregatedCounter].[IX_HangFire_AggregatedCounter_ExpireAt]...';


GO
CREATE NONCLUSTERED INDEX [IX_HangFire_AggregatedCounter_ExpireAt]
    ON [HangFire].[AggregatedCounter]([ExpireAt] ASC) WHERE ([ExpireAt] IS NOT NULL);


GO
PRINT N'Creating [HangFire].[Hash]...';


GO
CREATE TABLE [HangFire].[Hash] (
    [Key]      NVARCHAR (100) NOT NULL,
    [Field]    NVARCHAR (100) NOT NULL,
    [Value]    NVARCHAR (MAX) NULL,
    [ExpireAt] DATETIME2 (7)  NULL,
    CONSTRAINT [PK_HangFire_Hash] PRIMARY KEY CLUSTERED ([Key] ASC, [Field] ASC)
);


GO
PRINT N'Creating [HangFire].[Hash].[IX_HangFire_Hash_ExpireAt]...';


GO
CREATE NONCLUSTERED INDEX [IX_HangFire_Hash_ExpireAt]
    ON [HangFire].[Hash]([ExpireAt] ASC) WHERE ([ExpireAt] IS NOT NULL);


GO
PRINT N'Creating [HangFire].[Counter]...';


GO
CREATE TABLE [HangFire].[Counter] (
    [Key]      NVARCHAR (100) NOT NULL,
    [Value]    INT            NOT NULL,
    [ExpireAt] DATETIME       NULL
);


GO
PRINT N'Creating [HangFire].[Counter].[CX_HangFire_Counter]...';


GO
CREATE CLUSTERED INDEX [CX_HangFire_Counter]
    ON [HangFire].[Counter]([Key] ASC);


GO
PRINT N'Creating [dbo].[__EFMigrationsHistory]...';


GO
CREATE TABLE [dbo].[__EFMigrationsHistory] (
    [MigrationId]    NVARCHAR (150) NOT NULL,
    [ProductVersion] NVARCHAR (32)  NOT NULL,
    CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY CLUSTERED ([MigrationId] ASC)
);


GO
PRINT N'Creating [dbo].[AbpAuditLogs]...';


GO
CREATE TABLE [dbo].[AbpAuditLogs] (
    [Id]                   BIGINT          IDENTITY (1, 1) NOT NULL,
    [BrowserInfo]          NVARCHAR (512)  NULL,
    [ClientIpAddress]      NVARCHAR (64)   NULL,
    [ClientName]           NVARCHAR (128)  NULL,
    [CustomData]           NVARCHAR (2000) NULL,
    [Exception]            NVARCHAR (2000) NULL,
    [ExecutionDuration]    INT             NOT NULL,
    [ExecutionTime]        DATETIME2 (7)   NOT NULL,
    [ImpersonatorTenantId] INT             NULL,
    [ImpersonatorUserId]   BIGINT          NULL,
    [MethodName]           NVARCHAR (256)  NULL,
    [Parameters]           NVARCHAR (1024) NULL,
    [ServiceName]          NVARCHAR (256)  NULL,
    [TenantId]             INT             NULL,
    [UserId]               BIGINT          NULL,
    [ReturnValue]          NVARCHAR (MAX)  NULL,
    CONSTRAINT [PK_AbpAuditLogs] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[AbpAuditLogs].[IX_AbpAuditLogs_TenantId_ExecutionDuration]...';


GO
CREATE NONCLUSTERED INDEX [IX_AbpAuditLogs_TenantId_ExecutionDuration]
    ON [dbo].[AbpAuditLogs]([TenantId] ASC, [ExecutionDuration] ASC);


GO
PRINT N'Creating [dbo].[AbpAuditLogs].[IX_AbpAuditLogs_TenantId_ExecutionTime]...';


GO
CREATE NONCLUSTERED INDEX [IX_AbpAuditLogs_TenantId_ExecutionTime]
    ON [dbo].[AbpAuditLogs]([TenantId] ASC, [ExecutionTime] ASC);


GO
PRINT N'Creating [dbo].[AbpAuditLogs].[IX_AbpAuditLogs_TenantId_UserId]...';


GO
CREATE NONCLUSTERED INDEX [IX_AbpAuditLogs_TenantId_UserId]
    ON [dbo].[AbpAuditLogs]([TenantId] ASC, [UserId] ASC);


GO
PRINT N'Creating [dbo].[AbpBackgroundJobs]...';


GO
CREATE TABLE [dbo].[AbpBackgroundJobs] (
    [Id]            BIGINT         IDENTITY (1, 1) NOT NULL,
    [CreationTime]  DATETIME2 (7)  NOT NULL,
    [CreatorUserId] BIGINT         NULL,
    [IsAbandoned]   BIT            NOT NULL,
    [JobArgs]       NVARCHAR (MAX) NOT NULL,
    [JobType]       NVARCHAR (512) NOT NULL,
    [LastTryTime]   DATETIME2 (7)  NULL,
    [NextTryTime]   DATETIME2 (7)  NOT NULL,
    [Priority]      TINYINT        NOT NULL,
    [TryCount]      SMALLINT       NOT NULL,
    CONSTRAINT [PK_AbpBackgroundJobs] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[AbpBackgroundJobs].[IX_AbpBackgroundJobs_IsAbandoned_NextTryTime]...';


GO
CREATE NONCLUSTERED INDEX [IX_AbpBackgroundJobs_IsAbandoned_NextTryTime]
    ON [dbo].[AbpBackgroundJobs]([IsAbandoned] ASC, [NextTryTime] ASC);


GO
PRINT N'Creating [dbo].[AbpDynamicEntityProperties]...';


GO
CREATE TABLE [dbo].[AbpDynamicEntityProperties] (
    [Id]                INT            IDENTITY (1, 1) NOT NULL,
    [EntityFullName]    NVARCHAR (450) NULL,
    [DynamicPropertyId] INT            NOT NULL,
    [TenantId]          INT            NULL,
    CONSTRAINT [PK_AbpDynamicEntityProperties] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[AbpDynamicEntityProperties].[IX_AbpDynamicEntityProperties_DynamicPropertyId]...';


GO
CREATE NONCLUSTERED INDEX [IX_AbpDynamicEntityProperties_DynamicPropertyId]
    ON [dbo].[AbpDynamicEntityProperties]([DynamicPropertyId] ASC);


GO
PRINT N'Creating [dbo].[AbpDynamicEntityProperties].[IX_AbpDynamicEntityProperties_EntityFullName_DynamicPropertyId_TenantId]...';


GO
CREATE UNIQUE NONCLUSTERED INDEX [IX_AbpDynamicEntityProperties_EntityFullName_DynamicPropertyId_TenantId]
    ON [dbo].[AbpDynamicEntityProperties]([EntityFullName] ASC, [DynamicPropertyId] ASC, [TenantId] ASC) WHERE ([EntityFullName] IS NOT NULL AND [TenantId] IS NOT NULL);


GO
PRINT N'Creating [dbo].[AbpDynamicEntityPropertyValues]...';


GO
CREATE TABLE [dbo].[AbpDynamicEntityPropertyValues] (
    [Id]                      INT            IDENTITY (1, 1) NOT NULL,
    [Value]                   NVARCHAR (MAX) NOT NULL,
    [EntityId]                NVARCHAR (MAX) NULL,
    [DynamicEntityPropertyId] INT            NOT NULL,
    [TenantId]                INT            NULL,
    CONSTRAINT [PK_AbpDynamicEntityPropertyValues] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[AbpDynamicEntityPropertyValues].[IX_AbpDynamicEntityPropertyValues_DynamicEntityPropertyId]...';


GO
CREATE NONCLUSTERED INDEX [IX_AbpDynamicEntityPropertyValues_DynamicEntityPropertyId]
    ON [dbo].[AbpDynamicEntityPropertyValues]([DynamicEntityPropertyId] ASC);


GO
PRINT N'Creating [dbo].[AbpDynamicProperties]...';


GO
CREATE TABLE [dbo].[AbpDynamicProperties] (
    [Id]           INT            IDENTITY (1, 1) NOT NULL,
    [PropertyName] NVARCHAR (450) NULL,
    [InputType]    NVARCHAR (MAX) NULL,
    [Permission]   NVARCHAR (MAX) NULL,
    [TenantId]     INT            NULL,
    CONSTRAINT [PK_AbpDynamicProperties] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[AbpDynamicProperties].[IX_AbpDynamicProperties_PropertyName_TenantId]...';


GO
CREATE UNIQUE NONCLUSTERED INDEX [IX_AbpDynamicProperties_PropertyName_TenantId]
    ON [dbo].[AbpDynamicProperties]([PropertyName] ASC, [TenantId] ASC) WHERE ([PropertyName] IS NOT NULL AND [TenantId] IS NOT NULL);


GO
PRINT N'Creating [dbo].[AbpDynamicPropertyValues]...';


GO
CREATE TABLE [dbo].[AbpDynamicPropertyValues] (
    [Id]                INT            IDENTITY (1, 1) NOT NULL,
    [Value]             NVARCHAR (MAX) NOT NULL,
    [TenantId]          INT            NULL,
    [DynamicPropertyId] INT            NOT NULL,
    CONSTRAINT [PK_AbpDynamicPropertyValues] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[AbpDynamicPropertyValues].[IX_AbpDynamicPropertyValues_DynamicPropertyId]...';


GO
CREATE NONCLUSTERED INDEX [IX_AbpDynamicPropertyValues_DynamicPropertyId]
    ON [dbo].[AbpDynamicPropertyValues]([DynamicPropertyId] ASC);


GO
PRINT N'Creating [dbo].[AbpEditions]...';


GO
CREATE TABLE [dbo].[AbpEditions] (
    [Id]                    INT             IDENTITY (1, 1) NOT NULL,
    [CreationTime]          DATETIME2 (7)   NOT NULL,
    [CreatorUserId]         BIGINT          NULL,
    [DeleterUserId]         BIGINT          NULL,
    [DeletionTime]          DATETIME2 (7)   NULL,
    [DisplayName]           NVARCHAR (64)   NOT NULL,
    [IsDeleted]             BIT             NOT NULL,
    [LastModificationTime]  DATETIME2 (7)   NULL,
    [LastModifierUserId]    BIGINT          NULL,
    [Name]                  NVARCHAR (32)   NOT NULL,
    [Discriminator]         NVARCHAR (MAX)  NOT NULL,
    [AnnualPrice]           DECIMAL (18, 2) NULL,
    [ExpiringEditionId]     INT             NULL,
    [MonthlyPrice]          DECIMAL (18, 2) NULL,
    [TrialDayCount]         INT             NULL,
    [WaitingDayAfterExpire] INT             NULL,
    [DailyPrice]            DECIMAL (18, 2) NULL,
    [WeeklyPrice]           DECIMAL (18, 2) NULL,
    CONSTRAINT [PK_AbpEditions] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[AbpEntityChanges]...';


GO
CREATE TABLE [dbo].[AbpEntityChanges] (
    [Id]                 BIGINT         IDENTITY (1, 1) NOT NULL,
    [ChangeTime]         DATETIME2 (7)  NOT NULL,
    [ChangeType]         TINYINT        NOT NULL,
    [EntityChangeSetId]  BIGINT         NOT NULL,
    [EntityId]           NVARCHAR (48)  NULL,
    [EntityTypeFullName] NVARCHAR (192) NULL,
    [TenantId]           INT            NULL,
    CONSTRAINT [PK_AbpEntityChanges] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[AbpEntityChanges].[IX_AbpEntityChanges_EntityChangeSetId]...';


GO
CREATE NONCLUSTERED INDEX [IX_AbpEntityChanges_EntityChangeSetId]
    ON [dbo].[AbpEntityChanges]([EntityChangeSetId] ASC);


GO
PRINT N'Creating [dbo].[AbpEntityChanges].[IX_AbpEntityChanges_EntityTypeFullName_EntityId]...';


GO
CREATE NONCLUSTERED INDEX [IX_AbpEntityChanges_EntityTypeFullName_EntityId]
    ON [dbo].[AbpEntityChanges]([EntityTypeFullName] ASC, [EntityId] ASC);


GO
PRINT N'Creating [dbo].[AbpEntityChangeSets]...';


GO
CREATE TABLE [dbo].[AbpEntityChangeSets] (
    [Id]                   BIGINT         IDENTITY (1, 1) NOT NULL,
    [BrowserInfo]          NVARCHAR (512) NULL,
    [ClientIpAddress]      NVARCHAR (64)  NULL,
    [ClientName]           NVARCHAR (128) NULL,
    [CreationTime]         DATETIME2 (7)  NOT NULL,
    [ExtensionData]        NVARCHAR (MAX) NULL,
    [ImpersonatorTenantId] INT            NULL,
    [ImpersonatorUserId]   BIGINT         NULL,
    [Reason]               NVARCHAR (256) NULL,
    [TenantId]             INT            NULL,
    [UserId]               BIGINT         NULL,
    CONSTRAINT [PK_AbpEntityChangeSets] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[AbpEntityChangeSets].[IX_AbpEntityChangeSets_TenantId_CreationTime]...';


GO
CREATE NONCLUSTERED INDEX [IX_AbpEntityChangeSets_TenantId_CreationTime]
    ON [dbo].[AbpEntityChangeSets]([TenantId] ASC, [CreationTime] ASC);


GO
PRINT N'Creating [dbo].[AbpEntityChangeSets].[IX_AbpEntityChangeSets_TenantId_Reason]...';


GO
CREATE NONCLUSTERED INDEX [IX_AbpEntityChangeSets_TenantId_Reason]
    ON [dbo].[AbpEntityChangeSets]([TenantId] ASC, [Reason] ASC);


GO
PRINT N'Creating [dbo].[AbpEntityChangeSets].[IX_AbpEntityChangeSets_TenantId_UserId]...';


GO
CREATE NONCLUSTERED INDEX [IX_AbpEntityChangeSets_TenantId_UserId]
    ON [dbo].[AbpEntityChangeSets]([TenantId] ASC, [UserId] ASC);


GO
PRINT N'Creating [dbo].[AbpEntityPropertyChanges]...';


GO
CREATE TABLE [dbo].[AbpEntityPropertyChanges] (
    [Id]                   BIGINT         IDENTITY (1, 1) NOT NULL,
    [EntityChangeId]       BIGINT         NOT NULL,
    [NewValue]             NVARCHAR (512) NULL,
    [OriginalValue]        NVARCHAR (512) NULL,
    [PropertyName]         NVARCHAR (96)  NULL,
    [PropertyTypeFullName] NVARCHAR (192) NULL,
    [TenantId]             INT            NULL,
    CONSTRAINT [PK_AbpEntityPropertyChanges] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[AbpEntityPropertyChanges].[IX_AbpEntityPropertyChanges_EntityChangeId]...';


GO
CREATE NONCLUSTERED INDEX [IX_AbpEntityPropertyChanges_EntityChangeId]
    ON [dbo].[AbpEntityPropertyChanges]([EntityChangeId] ASC);


GO
PRINT N'Creating [dbo].[AbpFeatures]...';


GO
CREATE TABLE [dbo].[AbpFeatures] (
    [Id]            BIGINT          IDENTITY (1, 1) NOT NULL,
    [CreationTime]  DATETIME2 (7)   NOT NULL,
    [CreatorUserId] BIGINT          NULL,
    [Discriminator] NVARCHAR (MAX)  NOT NULL,
    [Name]          NVARCHAR (128)  NOT NULL,
    [Value]         NVARCHAR (2000) NOT NULL,
    [EditionId]     INT             NULL,
    [TenantId]      INT             NULL,
    CONSTRAINT [PK_AbpFeatures] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[AbpFeatures].[IX_AbpFeatures_EditionId_Name]...';


GO
CREATE NONCLUSTERED INDEX [IX_AbpFeatures_EditionId_Name]
    ON [dbo].[AbpFeatures]([EditionId] ASC, [Name] ASC);


GO
PRINT N'Creating [dbo].[AbpFeatures].[IX_AbpFeatures_TenantId_Name]...';


GO
CREATE NONCLUSTERED INDEX [IX_AbpFeatures_TenantId_Name]
    ON [dbo].[AbpFeatures]([TenantId] ASC, [Name] ASC);


GO
PRINT N'Creating [dbo].[AbpLanguages]...';


GO
CREATE TABLE [dbo].[AbpLanguages] (
    [Id]                   INT            IDENTITY (1, 1) NOT NULL,
    [CreationTime]         DATETIME2 (7)  NOT NULL,
    [CreatorUserId]        BIGINT         NULL,
    [DeleterUserId]        BIGINT         NULL,
    [DeletionTime]         DATETIME2 (7)  NULL,
    [DisplayName]          NVARCHAR (64)  NOT NULL,
    [Icon]                 NVARCHAR (128) NULL,
    [IsDeleted]            BIT            NOT NULL,
    [LastModificationTime] DATETIME2 (7)  NULL,
    [LastModifierUserId]   BIGINT         NULL,
    [Name]                 NVARCHAR (128) NOT NULL,
    [TenantId]             INT            NULL,
    [IsDisabled]           BIT            NOT NULL,
    CONSTRAINT [PK_AbpLanguages] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[AbpLanguages].[IX_AbpLanguages_TenantId_Name]...';


GO
CREATE NONCLUSTERED INDEX [IX_AbpLanguages_TenantId_Name]
    ON [dbo].[AbpLanguages]([TenantId] ASC, [Name] ASC);


GO
PRINT N'Creating [dbo].[AbpLanguageTexts]...';


GO
CREATE TABLE [dbo].[AbpLanguageTexts] (
    [Id]                   BIGINT         IDENTITY (1, 1) NOT NULL,
    [CreationTime]         DATETIME2 (7)  NOT NULL,
    [CreatorUserId]        BIGINT         NULL,
    [Key]                  NVARCHAR (256) NOT NULL,
    [LanguageName]         NVARCHAR (128) NOT NULL,
    [LastModificationTime] DATETIME2 (7)  NULL,
    [LastModifierUserId]   BIGINT         NULL,
    [Source]               NVARCHAR (128) NOT NULL,
    [TenantId]             INT            NULL,
    [Value]                NVARCHAR (MAX) NOT NULL,
    CONSTRAINT [PK_AbpLanguageTexts] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[AbpLanguageTexts].[IX_AbpLanguageTexts_TenantId_Source_LanguageName_Key]...';


GO
CREATE NONCLUSTERED INDEX [IX_AbpLanguageTexts_TenantId_Source_LanguageName_Key]
    ON [dbo].[AbpLanguageTexts]([TenantId] ASC, [Source] ASC, [LanguageName] ASC, [Key] ASC);


GO
PRINT N'Creating [dbo].[AbpNotifications]...';


GO
CREATE TABLE [dbo].[AbpNotifications] (
    [Id]                              UNIQUEIDENTIFIER NOT NULL,
    [CreationTime]                    DATETIME2 (7)    NOT NULL,
    [CreatorUserId]                   BIGINT           NULL,
    [Data]                            NVARCHAR (MAX)   NULL,
    [DataTypeName]                    NVARCHAR (512)   NULL,
    [EntityId]                        NVARCHAR (96)    NULL,
    [EntityTypeAssemblyQualifiedName] NVARCHAR (512)   NULL,
    [EntityTypeName]                  NVARCHAR (250)   NULL,
    [ExcludedUserIds]                 NVARCHAR (MAX)   NULL,
    [NotificationName]                NVARCHAR (96)    NOT NULL,
    [Severity]                        TINYINT          NOT NULL,
    [TenantIds]                       NVARCHAR (MAX)   NULL,
    [UserIds]                         NVARCHAR (MAX)   NULL,
    CONSTRAINT [PK_AbpNotifications] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[AbpNotificationSubscriptions]...';


GO
CREATE TABLE [dbo].[AbpNotificationSubscriptions] (
    [Id]                              UNIQUEIDENTIFIER NOT NULL,
    [CreationTime]                    DATETIME2 (7)    NOT NULL,
    [CreatorUserId]                   BIGINT           NULL,
    [EntityId]                        NVARCHAR (96)    NULL,
    [EntityTypeAssemblyQualifiedName] NVARCHAR (512)   NULL,
    [EntityTypeName]                  NVARCHAR (250)   NULL,
    [NotificationName]                NVARCHAR (96)    NULL,
    [TenantId]                        INT              NULL,
    [UserId]                          BIGINT           NOT NULL,
    CONSTRAINT [PK_AbpNotificationSubscriptions] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[AbpNotificationSubscriptions].[IX_AbpNotificationSubscriptions_NotificationName_EntityTypeName_EntityId_UserId]...';


GO
CREATE NONCLUSTERED INDEX [IX_AbpNotificationSubscriptions_NotificationName_EntityTypeName_EntityId_UserId]
    ON [dbo].[AbpNotificationSubscriptions]([NotificationName] ASC, [EntityTypeName] ASC, [EntityId] ASC, [UserId] ASC);


GO
PRINT N'Creating [dbo].[AbpNotificationSubscriptions].[IX_AbpNotificationSubscriptions_TenantId_NotificationName_EntityTypeName_EntityId_UserId]...';


GO
CREATE NONCLUSTERED INDEX [IX_AbpNotificationSubscriptions_TenantId_NotificationName_EntityTypeName_EntityId_UserId]
    ON [dbo].[AbpNotificationSubscriptions]([TenantId] ASC, [NotificationName] ASC, [EntityTypeName] ASC, [EntityId] ASC, [UserId] ASC);


GO
PRINT N'Creating [dbo].[AbpOrganizationUnitRoles]...';


GO
CREATE TABLE [dbo].[AbpOrganizationUnitRoles] (
    [Id]                 BIGINT        IDENTITY (1, 1) NOT NULL,
    [CreationTime]       DATETIME2 (7) NOT NULL,
    [CreatorUserId]      BIGINT        NULL,
    [TenantId]           INT           NULL,
    [RoleId]             INT           NOT NULL,
    [OrganizationUnitId] BIGINT        NOT NULL,
    [IsDeleted]          BIT           NOT NULL,
    CONSTRAINT [PK_AbpOrganizationUnitRoles] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[AbpOrganizationUnitRoles].[IX_AbpOrganizationUnitRoles_TenantId_OrganizationUnitId]...';


GO
CREATE NONCLUSTERED INDEX [IX_AbpOrganizationUnitRoles_TenantId_OrganizationUnitId]
    ON [dbo].[AbpOrganizationUnitRoles]([TenantId] ASC, [OrganizationUnitId] ASC);


GO
PRINT N'Creating [dbo].[AbpOrganizationUnitRoles].[IX_AbpOrganizationUnitRoles_TenantId_RoleId]...';


GO
CREATE NONCLUSTERED INDEX [IX_AbpOrganizationUnitRoles_TenantId_RoleId]
    ON [dbo].[AbpOrganizationUnitRoles]([TenantId] ASC, [RoleId] ASC);


GO
PRINT N'Creating [dbo].[AbpOrganizationUnits]...';


GO
CREATE TABLE [dbo].[AbpOrganizationUnits] (
    [Id]                   BIGINT         IDENTITY (1, 1) NOT NULL,
    [Code]                 NVARCHAR (95)  NOT NULL,
    [CreationTime]         DATETIME2 (7)  NOT NULL,
    [CreatorUserId]        BIGINT         NULL,
    [DeleterUserId]        BIGINT         NULL,
    [DeletionTime]         DATETIME2 (7)  NULL,
    [DisplayName]          NVARCHAR (128) NOT NULL,
    [IsDeleted]            BIT            NOT NULL,
    [LastModificationTime] DATETIME2 (7)  NULL,
    [LastModifierUserId]   BIGINT         NULL,
    [ParentId]             BIGINT         NULL,
    [TenantId]             INT            NULL,
    CONSTRAINT [PK_AbpOrganizationUnits] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[AbpOrganizationUnits].[IX_AbpOrganizationUnits_ParentId]...';


GO
CREATE NONCLUSTERED INDEX [IX_AbpOrganizationUnits_ParentId]
    ON [dbo].[AbpOrganizationUnits]([ParentId] ASC);


GO
PRINT N'Creating [dbo].[AbpOrganizationUnits].[IX_AbpOrganizationUnits_TenantId_Code]...';


GO
CREATE NONCLUSTERED INDEX [IX_AbpOrganizationUnits_TenantId_Code]
    ON [dbo].[AbpOrganizationUnits]([TenantId] ASC, [Code] ASC);


GO
PRINT N'Creating [dbo].[AbpPermissions]...';


GO
CREATE TABLE [dbo].[AbpPermissions] (
    [Id]            BIGINT         IDENTITY (1, 1) NOT NULL,
    [CreationTime]  DATETIME2 (7)  NOT NULL,
    [CreatorUserId] BIGINT         NULL,
    [Discriminator] NVARCHAR (MAX) NOT NULL,
    [IsGranted]     BIT            NOT NULL,
    [Name]          NVARCHAR (128) NOT NULL,
    [TenantId]      INT            NULL,
    [RoleId]        INT            NULL,
    [UserId]        BIGINT         NULL,
    CONSTRAINT [PK_AbpPermissions] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[AbpPermissions].[IX_AbpPermissions_TenantId_Name]...';


GO
CREATE NONCLUSTERED INDEX [IX_AbpPermissions_TenantId_Name]
    ON [dbo].[AbpPermissions]([TenantId] ASC, [Name] ASC);


GO
PRINT N'Creating [dbo].[AbpPermissions].[IX_AbpPermissions_RoleId]...';


GO
CREATE NONCLUSTERED INDEX [IX_AbpPermissions_RoleId]
    ON [dbo].[AbpPermissions]([RoleId] ASC);


GO
PRINT N'Creating [dbo].[AbpPermissions].[IX_AbpPermissions_UserId]...';


GO
CREATE NONCLUSTERED INDEX [IX_AbpPermissions_UserId]
    ON [dbo].[AbpPermissions]([UserId] ASC);


GO
PRINT N'Creating [dbo].[AbpPersistedGrants]...';


GO
CREATE TABLE [dbo].[AbpPersistedGrants] (
    [Id]           NVARCHAR (200) NOT NULL,
    [ClientId]     NVARCHAR (200) NOT NULL,
    [CreationTime] DATETIME2 (7)  NOT NULL,
    [Data]         NVARCHAR (MAX) NOT NULL,
    [Expiration]   DATETIME2 (7)  NULL,
    [SubjectId]    NVARCHAR (200) NULL,
    [Type]         NVARCHAR (50)  NOT NULL,
    CONSTRAINT [PK_AbpPersistedGrants] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[AbpPersistedGrants].[IX_AbpPersistedGrants_SubjectId_ClientId_Type]...';


GO
CREATE NONCLUSTERED INDEX [IX_AbpPersistedGrants_SubjectId_ClientId_Type]
    ON [dbo].[AbpPersistedGrants]([SubjectId] ASC, [ClientId] ASC, [Type] ASC);


GO
PRINT N'Creating [dbo].[AbpRoleClaims]...';


GO
CREATE TABLE [dbo].[AbpRoleClaims] (
    [Id]            BIGINT         IDENTITY (1, 1) NOT NULL,
    [ClaimType]     NVARCHAR (256) NULL,
    [ClaimValue]    NVARCHAR (MAX) NULL,
    [CreationTime]  DATETIME2 (7)  NOT NULL,
    [CreatorUserId] BIGINT         NULL,
    [RoleId]        INT            NOT NULL,
    [TenantId]      INT            NULL,
    CONSTRAINT [PK_AbpRoleClaims] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[AbpRoleClaims].[IX_AbpRoleClaims_RoleId]...';


GO
CREATE NONCLUSTERED INDEX [IX_AbpRoleClaims_RoleId]
    ON [dbo].[AbpRoleClaims]([RoleId] ASC);


GO
PRINT N'Creating [dbo].[AbpRoleClaims].[IX_AbpRoleClaims_TenantId_ClaimType]...';


GO
CREATE NONCLUSTERED INDEX [IX_AbpRoleClaims_TenantId_ClaimType]
    ON [dbo].[AbpRoleClaims]([TenantId] ASC, [ClaimType] ASC);


GO
PRINT N'Creating [dbo].[AbpRoles]...';


GO
CREATE TABLE [dbo].[AbpRoles] (
    [Id]                   INT            IDENTITY (1, 1) NOT NULL,
    [ConcurrencyStamp]     NVARCHAR (128) NULL,
    [CreationTime]         DATETIME2 (7)  NOT NULL,
    [CreatorUserId]        BIGINT         NULL,
    [DeleterUserId]        BIGINT         NULL,
    [DeletionTime]         DATETIME2 (7)  NULL,
    [DisplayName]          NVARCHAR (64)  NOT NULL,
    [IsDefault]            BIT            NOT NULL,
    [IsDeleted]            BIT            NOT NULL,
    [IsStatic]             BIT            NOT NULL,
    [LastModificationTime] DATETIME2 (7)  NULL,
    [LastModifierUserId]   BIGINT         NULL,
    [Name]                 NVARCHAR (32)  NOT NULL,
    [NormalizedName]       NVARCHAR (32)  NOT NULL,
    [TenantId]             INT            NULL,
    CONSTRAINT [PK_AbpRoles] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[AbpRoles].[IX_AbpRoles_CreatorUserId]...';


GO
CREATE NONCLUSTERED INDEX [IX_AbpRoles_CreatorUserId]
    ON [dbo].[AbpRoles]([CreatorUserId] ASC);


GO
PRINT N'Creating [dbo].[AbpRoles].[IX_AbpRoles_DeleterUserId]...';


GO
CREATE NONCLUSTERED INDEX [IX_AbpRoles_DeleterUserId]
    ON [dbo].[AbpRoles]([DeleterUserId] ASC);


GO
PRINT N'Creating [dbo].[AbpRoles].[IX_AbpRoles_LastModifierUserId]...';


GO
CREATE NONCLUSTERED INDEX [IX_AbpRoles_LastModifierUserId]
    ON [dbo].[AbpRoles]([LastModifierUserId] ASC);


GO
PRINT N'Creating [dbo].[AbpRoles].[IX_AbpRoles_TenantId_NormalizedName]...';


GO
CREATE NONCLUSTERED INDEX [IX_AbpRoles_TenantId_NormalizedName]
    ON [dbo].[AbpRoles]([TenantId] ASC, [NormalizedName] ASC);


GO
PRINT N'Creating [dbo].[AbpSettings]...';


GO
CREATE TABLE [dbo].[AbpSettings] (
    [Id]                   BIGINT         IDENTITY (1, 1) NOT NULL,
    [CreationTime]         DATETIME2 (7)  NOT NULL,
    [CreatorUserId]        BIGINT         NULL,
    [LastModificationTime] DATETIME2 (7)  NULL,
    [LastModifierUserId]   BIGINT         NULL,
    [Name]                 NVARCHAR (256) NOT NULL,
    [TenantId]             INT            NULL,
    [UserId]               BIGINT         NULL,
    [Value]                NVARCHAR (MAX) NULL,
    CONSTRAINT [PK_AbpSettings] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[AbpSettings].[IX_AbpSettings_UserId]...';


GO
CREATE NONCLUSTERED INDEX [IX_AbpSettings_UserId]
    ON [dbo].[AbpSettings]([UserId] ASC);


GO
PRINT N'Creating [dbo].[AbpSettings].[IX_AbpSettings_TenantId_Name_UserId]...';


GO
CREATE UNIQUE NONCLUSTERED INDEX [IX_AbpSettings_TenantId_Name_UserId]
    ON [dbo].[AbpSettings]([TenantId] ASC, [Name] ASC, [UserId] ASC);


GO
PRINT N'Creating [dbo].[AbpTenantNotifications]...';


GO
CREATE TABLE [dbo].[AbpTenantNotifications] (
    [Id]                              UNIQUEIDENTIFIER NOT NULL,
    [CreationTime]                    DATETIME2 (7)    NOT NULL,
    [CreatorUserId]                   BIGINT           NULL,
    [Data]                            NVARCHAR (MAX)   NULL,
    [DataTypeName]                    NVARCHAR (512)   NULL,
    [EntityId]                        NVARCHAR (96)    NULL,
    [EntityTypeAssemblyQualifiedName] NVARCHAR (512)   NULL,
    [EntityTypeName]                  NVARCHAR (250)   NULL,
    [NotificationName]                NVARCHAR (96)    NOT NULL,
    [Severity]                        TINYINT          NOT NULL,
    [TenantId]                        INT              NULL,
    CONSTRAINT [PK_AbpTenantNotifications] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[AbpTenantNotifications].[IX_AbpTenantNotifications_TenantId]...';


GO
CREATE NONCLUSTERED INDEX [IX_AbpTenantNotifications_TenantId]
    ON [dbo].[AbpTenantNotifications]([TenantId] ASC);


GO
PRINT N'Creating [dbo].[AbpTenants]...';


GO
CREATE TABLE [dbo].[AbpTenants] (
    [Id]                       INT              IDENTITY (1, 1) NOT NULL,
    [ConnectionString]         NVARCHAR (1024)  NULL,
    [CreationTime]             DATETIME2 (7)    NOT NULL,
    [CreatorUserId]            BIGINT           NULL,
    [CustomCssId]              UNIQUEIDENTIFIER NULL,
    [DeleterUserId]            BIGINT           NULL,
    [DeletionTime]             DATETIME2 (7)    NULL,
    [EditionId]                INT              NULL,
    [IsActive]                 BIT              NOT NULL,
    [IsDeleted]                BIT              NOT NULL,
    [LastModificationTime]     DATETIME2 (7)    NULL,
    [LastModifierUserId]       BIGINT           NULL,
    [LogoFileType]             NVARCHAR (64)    NULL,
    [LogoId]                   UNIQUEIDENTIFIER NULL,
    [Name]                     NVARCHAR (128)   NOT NULL,
    [TenancyName]              NVARCHAR (64)    NOT NULL,
    [IsInTrialPeriod]          BIT              NOT NULL,
    [SubscriptionEndDateUtc]   DATETIME2 (7)    NULL,
    [SubscriptionPaymentType]  INT              NOT NULL,
    [CommercialName]           NVARCHAR (MAX)   NULL,
    [CustomerID]               INT              NOT NULL,
    [CustomerLegalName]        NVARCHAR (MAX)   NULL,
    [Address]                  NVARCHAR (MAX)   NULL,
    [ContactPersonEmail]       NVARCHAR (MAX)   NULL,
    [ContactPersonName]        NVARCHAR (MAX)   NULL,
    [ContactPersonPhoneNumber] NVARCHAR (MAX)   NULL,
    [CustomerStatusID]         INT              NOT NULL,
    [Email]                    NVARCHAR (MAX)   NULL,
    [LegalID]                  NVARCHAR (MAX)   NULL,
    [PhoneNumber]              NVARCHAR (MAX)   NULL,
    [SmoochAPIKeyID]           NVARCHAR (MAX)   NULL,
    [SmoochAppID]              NVARCHAR (MAX)   NULL,
    [SmoochSecretKey]          NVARCHAR (MAX)   NULL,
    [DirectLineSecret]         NVARCHAR (MAX)   NULL,
    [IsBotActive]              BIT              NOT NULL,
    [botId]                    NVARCHAR (MAX)   NULL,
    CONSTRAINT [PK_AbpTenants] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[AbpTenants].[IX_AbpTenants_CreatorUserId]...';


GO
CREATE NONCLUSTERED INDEX [IX_AbpTenants_CreatorUserId]
    ON [dbo].[AbpTenants]([CreatorUserId] ASC);


GO
PRINT N'Creating [dbo].[AbpTenants].[IX_AbpTenants_DeleterUserId]...';


GO
CREATE NONCLUSTERED INDEX [IX_AbpTenants_DeleterUserId]
    ON [dbo].[AbpTenants]([DeleterUserId] ASC);


GO
PRINT N'Creating [dbo].[AbpTenants].[IX_AbpTenants_EditionId]...';


GO
CREATE NONCLUSTERED INDEX [IX_AbpTenants_EditionId]
    ON [dbo].[AbpTenants]([EditionId] ASC);


GO
PRINT N'Creating [dbo].[AbpTenants].[IX_AbpTenants_LastModifierUserId]...';


GO
CREATE NONCLUSTERED INDEX [IX_AbpTenants_LastModifierUserId]
    ON [dbo].[AbpTenants]([LastModifierUserId] ASC);


GO
PRINT N'Creating [dbo].[AbpTenants].[IX_AbpTenants_TenancyName]...';


GO
CREATE NONCLUSTERED INDEX [IX_AbpTenants_TenancyName]
    ON [dbo].[AbpTenants]([TenancyName] ASC);


GO
PRINT N'Creating [dbo].[AbpTenants].[IX_AbpTenants_CreationTime]...';


GO
CREATE NONCLUSTERED INDEX [IX_AbpTenants_CreationTime]
    ON [dbo].[AbpTenants]([CreationTime] ASC);


GO
PRINT N'Creating [dbo].[AbpTenants].[IX_AbpTenants_SubscriptionEndDateUtc]...';


GO
CREATE NONCLUSTERED INDEX [IX_AbpTenants_SubscriptionEndDateUtc]
    ON [dbo].[AbpTenants]([SubscriptionEndDateUtc] ASC);


GO
PRINT N'Creating [dbo].[AbpUserAccounts]...';


GO
CREATE TABLE [dbo].[AbpUserAccounts] (
    [Id]                   BIGINT         IDENTITY (1, 1) NOT NULL,
    [CreationTime]         DATETIME2 (7)  NOT NULL,
    [CreatorUserId]        BIGINT         NULL,
    [DeleterUserId]        BIGINT         NULL,
    [DeletionTime]         DATETIME2 (7)  NULL,
    [EmailAddress]         NVARCHAR (256) NULL,
    [IsDeleted]            BIT            NOT NULL,
    [LastModificationTime] DATETIME2 (7)  NULL,
    [LastModifierUserId]   BIGINT         NULL,
    [TenantId]             INT            NULL,
    [UserId]               BIGINT         NOT NULL,
    [UserLinkId]           BIGINT         NULL,
    [UserName]             NVARCHAR (256) NULL,
    CONSTRAINT [PK_AbpUserAccounts] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[AbpUserAccounts].[IX_AbpUserAccounts_EmailAddress]...';


GO
CREATE NONCLUSTERED INDEX [IX_AbpUserAccounts_EmailAddress]
    ON [dbo].[AbpUserAccounts]([EmailAddress] ASC);


GO
PRINT N'Creating [dbo].[AbpUserAccounts].[IX_AbpUserAccounts_UserName]...';


GO
CREATE NONCLUSTERED INDEX [IX_AbpUserAccounts_UserName]
    ON [dbo].[AbpUserAccounts]([UserName] ASC);


GO
PRINT N'Creating [dbo].[AbpUserAccounts].[IX_AbpUserAccounts_TenantId_EmailAddress]...';


GO
CREATE NONCLUSTERED INDEX [IX_AbpUserAccounts_TenantId_EmailAddress]
    ON [dbo].[AbpUserAccounts]([TenantId] ASC, [EmailAddress] ASC);


GO
PRINT N'Creating [dbo].[AbpUserAccounts].[IX_AbpUserAccounts_TenantId_UserId]...';


GO
CREATE NONCLUSTERED INDEX [IX_AbpUserAccounts_TenantId_UserId]
    ON [dbo].[AbpUserAccounts]([TenantId] ASC, [UserId] ASC);


GO
PRINT N'Creating [dbo].[AbpUserAccounts].[IX_AbpUserAccounts_TenantId_UserName]...';


GO
CREATE NONCLUSTERED INDEX [IX_AbpUserAccounts_TenantId_UserName]
    ON [dbo].[AbpUserAccounts]([TenantId] ASC, [UserName] ASC);


GO
PRINT N'Creating [dbo].[AbpUserClaims]...';


GO
CREATE TABLE [dbo].[AbpUserClaims] (
    [Id]            BIGINT         IDENTITY (1, 1) NOT NULL,
    [ClaimType]     NVARCHAR (256) NULL,
    [ClaimValue]    NVARCHAR (MAX) NULL,
    [CreationTime]  DATETIME2 (7)  NOT NULL,
    [CreatorUserId] BIGINT         NULL,
    [TenantId]      INT            NULL,
    [UserId]        BIGINT         NOT NULL,
    CONSTRAINT [PK_AbpUserClaims] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[AbpUserClaims].[IX_AbpUserClaims_UserId]...';


GO
CREATE NONCLUSTERED INDEX [IX_AbpUserClaims_UserId]
    ON [dbo].[AbpUserClaims]([UserId] ASC);


GO
PRINT N'Creating [dbo].[AbpUserClaims].[IX_AbpUserClaims_TenantId_ClaimType]...';


GO
CREATE NONCLUSTERED INDEX [IX_AbpUserClaims_TenantId_ClaimType]
    ON [dbo].[AbpUserClaims]([TenantId] ASC, [ClaimType] ASC);


GO
PRINT N'Creating [dbo].[AbpUserLoginAttempts]...';


GO
CREATE TABLE [dbo].[AbpUserLoginAttempts] (
    [Id]                     BIGINT         IDENTITY (1, 1) NOT NULL,
    [BrowserInfo]            NVARCHAR (512) NULL,
    [ClientIpAddress]        NVARCHAR (64)  NULL,
    [ClientName]             NVARCHAR (128) NULL,
    [CreationTime]           DATETIME2 (7)  NOT NULL,
    [Result]                 TINYINT        NOT NULL,
    [TenancyName]            NVARCHAR (64)  NULL,
    [TenantId]               INT            NULL,
    [UserId]                 BIGINT         NULL,
    [UserNameOrEmailAddress] NVARCHAR (256) NULL,
    CONSTRAINT [PK_AbpUserLoginAttempts] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[AbpUserLoginAttempts].[IX_AbpUserLoginAttempts_UserId_TenantId]...';


GO
CREATE NONCLUSTERED INDEX [IX_AbpUserLoginAttempts_UserId_TenantId]
    ON [dbo].[AbpUserLoginAttempts]([UserId] ASC, [TenantId] ASC);


GO
PRINT N'Creating [dbo].[AbpUserLoginAttempts].[IX_AbpUserLoginAttempts_TenancyName_UserNameOrEmailAddress_Result]...';


GO
CREATE NONCLUSTERED INDEX [IX_AbpUserLoginAttempts_TenancyName_UserNameOrEmailAddress_Result]
    ON [dbo].[AbpUserLoginAttempts]([TenancyName] ASC, [UserNameOrEmailAddress] ASC, [Result] ASC);


GO
PRINT N'Creating [dbo].[AbpUserLogins]...';


GO
CREATE TABLE [dbo].[AbpUserLogins] (
    [Id]            BIGINT         IDENTITY (1, 1) NOT NULL,
    [LoginProvider] NVARCHAR (128) NOT NULL,
    [ProviderKey]   NVARCHAR (256) NOT NULL,
    [TenantId]      INT            NULL,
    [UserId]        BIGINT         NOT NULL,
    CONSTRAINT [PK_AbpUserLogins] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[AbpUserLogins].[IX_AbpUserLogins_UserId]...';


GO
CREATE NONCLUSTERED INDEX [IX_AbpUserLogins_UserId]
    ON [dbo].[AbpUserLogins]([UserId] ASC);


GO
PRINT N'Creating [dbo].[AbpUserLogins].[IX_AbpUserLogins_TenantId_UserId]...';


GO
CREATE NONCLUSTERED INDEX [IX_AbpUserLogins_TenantId_UserId]
    ON [dbo].[AbpUserLogins]([TenantId] ASC, [UserId] ASC);


GO
PRINT N'Creating [dbo].[AbpUserLogins].[IX_AbpUserLogins_TenantId_LoginProvider_ProviderKey]...';


GO
CREATE NONCLUSTERED INDEX [IX_AbpUserLogins_TenantId_LoginProvider_ProviderKey]
    ON [dbo].[AbpUserLogins]([TenantId] ASC, [LoginProvider] ASC, [ProviderKey] ASC);


GO
PRINT N'Creating [dbo].[AbpUserNotifications]...';


GO
CREATE TABLE [dbo].[AbpUserNotifications] (
    [Id]                   UNIQUEIDENTIFIER NOT NULL,
    [CreationTime]         DATETIME2 (7)    NOT NULL,
    [State]                INT              NOT NULL,
    [TenantId]             INT              NULL,
    [TenantNotificationId] UNIQUEIDENTIFIER NOT NULL,
    [UserId]               BIGINT           NOT NULL,
    CONSTRAINT [PK_AbpUserNotifications] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[AbpUserNotifications].[IX_AbpUserNotifications_UserId_State_CreationTime]...';


GO
CREATE NONCLUSTERED INDEX [IX_AbpUserNotifications_UserId_State_CreationTime]
    ON [dbo].[AbpUserNotifications]([UserId] ASC, [State] ASC, [CreationTime] ASC);


GO
PRINT N'Creating [dbo].[AbpUserOrganizationUnits]...';


GO
CREATE TABLE [dbo].[AbpUserOrganizationUnits] (
    [Id]                 BIGINT        IDENTITY (1, 1) NOT NULL,
    [CreationTime]       DATETIME2 (7) NOT NULL,
    [CreatorUserId]      BIGINT        NULL,
    [OrganizationUnitId] BIGINT        NOT NULL,
    [TenantId]           INT           NULL,
    [UserId]             BIGINT        NOT NULL,
    [IsDeleted]          BIT           NOT NULL,
    CONSTRAINT [PK_AbpUserOrganizationUnits] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[AbpUserOrganizationUnits].[IX_AbpUserOrganizationUnits_TenantId_OrganizationUnitId]...';


GO
CREATE NONCLUSTERED INDEX [IX_AbpUserOrganizationUnits_TenantId_OrganizationUnitId]
    ON [dbo].[AbpUserOrganizationUnits]([TenantId] ASC, [OrganizationUnitId] ASC);


GO
PRINT N'Creating [dbo].[AbpUserOrganizationUnits].[IX_AbpUserOrganizationUnits_TenantId_UserId]...';


GO
CREATE NONCLUSTERED INDEX [IX_AbpUserOrganizationUnits_TenantId_UserId]
    ON [dbo].[AbpUserOrganizationUnits]([TenantId] ASC, [UserId] ASC);


GO
PRINT N'Creating [dbo].[AbpUserOrganizationUnits].[IX_AbpUserOrganizationUnits_UserId]...';


GO
CREATE NONCLUSTERED INDEX [IX_AbpUserOrganizationUnits_UserId]
    ON [dbo].[AbpUserOrganizationUnits]([UserId] ASC);


GO
PRINT N'Creating [dbo].[AbpUserRoles]...';


GO
CREATE TABLE [dbo].[AbpUserRoles] (
    [Id]            BIGINT        IDENTITY (1, 1) NOT NULL,
    [CreationTime]  DATETIME2 (7) NOT NULL,
    [CreatorUserId] BIGINT        NULL,
    [RoleId]        INT           NOT NULL,
    [TenantId]      INT           NULL,
    [UserId]        BIGINT        NOT NULL,
    CONSTRAINT [PK_AbpUserRoles] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[AbpUserRoles].[IX_AbpUserRoles_UserId]...';


GO
CREATE NONCLUSTERED INDEX [IX_AbpUserRoles_UserId]
    ON [dbo].[AbpUserRoles]([UserId] ASC);


GO
PRINT N'Creating [dbo].[AbpUserRoles].[IX_AbpUserRoles_TenantId_RoleId]...';


GO
CREATE NONCLUSTERED INDEX [IX_AbpUserRoles_TenantId_RoleId]
    ON [dbo].[AbpUserRoles]([TenantId] ASC, [RoleId] ASC);


GO
PRINT N'Creating [dbo].[AbpUserRoles].[IX_AbpUserRoles_TenantId_UserId]...';


GO
CREATE NONCLUSTERED INDEX [IX_AbpUserRoles_TenantId_UserId]
    ON [dbo].[AbpUserRoles]([TenantId] ASC, [UserId] ASC);


GO
PRINT N'Creating [dbo].[AbpUsers]...';


GO
CREATE TABLE [dbo].[AbpUsers] (
    [Id]                              BIGINT           IDENTITY (1, 1) NOT NULL,
    [AccessFailedCount]               INT              NOT NULL,
    [AuthenticationSource]            NVARCHAR (64)    NULL,
    [ConcurrencyStamp]                NVARCHAR (128)   NULL,
    [CreationTime]                    DATETIME2 (7)    NOT NULL,
    [CreatorUserId]                   BIGINT           NULL,
    [DeleterUserId]                   BIGINT           NULL,
    [DeletionTime]                    DATETIME2 (7)    NULL,
    [EmailAddress]                    NVARCHAR (256)   NOT NULL,
    [EmailConfirmationCode]           NVARCHAR (328)   NULL,
    [IsActive]                        BIT              NOT NULL,
    [IsDeleted]                       BIT              NOT NULL,
    [IsEmailConfirmed]                BIT              NOT NULL,
    [IsLockoutEnabled]                BIT              NOT NULL,
    [IsPhoneNumberConfirmed]          BIT              NOT NULL,
    [IsTwoFactorEnabled]              BIT              NOT NULL,
    [LastModificationTime]            DATETIME2 (7)    NULL,
    [LastModifierUserId]              BIGINT           NULL,
    [LockoutEndDateUtc]               DATETIME2 (7)    NULL,
    [Name]                            NVARCHAR (64)    NOT NULL,
    [NormalizedEmailAddress]          NVARCHAR (256)   NOT NULL,
    [NormalizedUserName]              NVARCHAR (256)   NOT NULL,
    [Password]                        NVARCHAR (128)   NOT NULL,
    [PasswordResetCode]               NVARCHAR (328)   NULL,
    [PhoneNumber]                     NVARCHAR (32)    NULL,
    [ProfilePictureId]                UNIQUEIDENTIFIER NULL,
    [SecurityStamp]                   NVARCHAR (128)   NULL,
    [ShouldChangePasswordOnNextLogin] BIT              NOT NULL,
    [Surname]                         NVARCHAR (64)    NOT NULL,
    [TenantId]                        INT              NULL,
    [UserName]                        NVARCHAR (256)   NOT NULL,
    [SignInToken]                     NVARCHAR (MAX)   NULL,
    [SignInTokenExpireTimeUtc]        DATETIME2 (7)    NULL,
    [GoogleAuthenticatorKey]          NVARCHAR (MAX)   NULL,
    CONSTRAINT [PK_AbpUsers] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[AbpUsers].[IX_AbpUsers_CreatorUserId]...';


GO
CREATE NONCLUSTERED INDEX [IX_AbpUsers_CreatorUserId]
    ON [dbo].[AbpUsers]([CreatorUserId] ASC);


GO
PRINT N'Creating [dbo].[AbpUsers].[IX_AbpUsers_DeleterUserId]...';


GO
CREATE NONCLUSTERED INDEX [IX_AbpUsers_DeleterUserId]
    ON [dbo].[AbpUsers]([DeleterUserId] ASC);


GO
PRINT N'Creating [dbo].[AbpUsers].[IX_AbpUsers_LastModifierUserId]...';


GO
CREATE NONCLUSTERED INDEX [IX_AbpUsers_LastModifierUserId]
    ON [dbo].[AbpUsers]([LastModifierUserId] ASC);


GO
PRINT N'Creating [dbo].[AbpUsers].[IX_AbpUsers_TenantId_NormalizedEmailAddress]...';


GO
CREATE NONCLUSTERED INDEX [IX_AbpUsers_TenantId_NormalizedEmailAddress]
    ON [dbo].[AbpUsers]([TenantId] ASC, [NormalizedEmailAddress] ASC);


GO
PRINT N'Creating [dbo].[AbpUsers].[IX_AbpUsers_TenantId_NormalizedUserName]...';


GO
CREATE NONCLUSTERED INDEX [IX_AbpUsers_TenantId_NormalizedUserName]
    ON [dbo].[AbpUsers]([TenantId] ASC, [NormalizedUserName] ASC);


GO
PRINT N'Creating [dbo].[AbpUserTokens]...';


GO
CREATE TABLE [dbo].[AbpUserTokens] (
    [Id]            BIGINT         IDENTITY (1, 1) NOT NULL,
    [LoginProvider] NVARCHAR (128) NULL,
    [Name]          NVARCHAR (128) NULL,
    [TenantId]      INT            NULL,
    [UserId]        BIGINT         NOT NULL,
    [Value]         NVARCHAR (512) NULL,
    [ExpireDate]    DATETIME2 (7)  NULL,
    CONSTRAINT [PK_AbpUserTokens] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[AbpUserTokens].[IX_AbpUserTokens_UserId]...';


GO
CREATE NONCLUSTERED INDEX [IX_AbpUserTokens_UserId]
    ON [dbo].[AbpUserTokens]([UserId] ASC);


GO
PRINT N'Creating [dbo].[AbpUserTokens].[IX_AbpUserTokens_TenantId_UserId]...';


GO
CREATE NONCLUSTERED INDEX [IX_AbpUserTokens_TenantId_UserId]
    ON [dbo].[AbpUserTokens]([TenantId] ASC, [UserId] ASC);


GO
PRINT N'Creating [dbo].[AbpWebhookEvents]...';


GO
CREATE TABLE [dbo].[AbpWebhookEvents] (
    [Id]           UNIQUEIDENTIFIER NOT NULL,
    [WebhookName]  NVARCHAR (MAX)   NOT NULL,
    [Data]         NVARCHAR (MAX)   NULL,
    [CreationTime] DATETIME2 (7)    NOT NULL,
    [TenantId]     INT              NULL,
    [IsDeleted]    BIT              NOT NULL,
    [DeletionTime] DATETIME2 (7)    NULL,
    CONSTRAINT [PK_AbpWebhookEvents] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[AbpWebhookSendAttempts]...';


GO
CREATE TABLE [dbo].[AbpWebhookSendAttempts] (
    [Id]                    UNIQUEIDENTIFIER NOT NULL,
    [WebhookEventId]        UNIQUEIDENTIFIER NOT NULL,
    [WebhookSubscriptionId] UNIQUEIDENTIFIER NOT NULL,
    [Response]              NVARCHAR (MAX)   NULL,
    [ResponseStatusCode]    INT              NULL,
    [CreationTime]          DATETIME2 (7)    NOT NULL,
    [LastModificationTime]  DATETIME2 (7)    NULL,
    [TenantId]              INT              NULL,
    CONSTRAINT [PK_AbpWebhookSendAttempts] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[AbpWebhookSendAttempts].[IX_AbpWebhookSendAttempts_WebhookEventId]...';


GO
CREATE NONCLUSTERED INDEX [IX_AbpWebhookSendAttempts_WebhookEventId]
    ON [dbo].[AbpWebhookSendAttempts]([WebhookEventId] ASC);


GO
PRINT N'Creating [dbo].[AbpWebhookSubscriptions]...';


GO
CREATE TABLE [dbo].[AbpWebhookSubscriptions] (
    [Id]            UNIQUEIDENTIFIER NOT NULL,
    [CreationTime]  DATETIME2 (7)    NOT NULL,
    [CreatorUserId] BIGINT           NULL,
    [TenantId]      INT              NULL,
    [WebhookUri]    NVARCHAR (MAX)   NOT NULL,
    [Secret]        NVARCHAR (MAX)   NOT NULL,
    [IsActive]      BIT              NOT NULL,
    [Webhooks]      NVARCHAR (MAX)   NULL,
    [Headers]       NVARCHAR (MAX)   NULL,
    CONSTRAINT [PK_AbpWebhookSubscriptions] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[AccountBillings]...';


GO
CREATE TABLE [dbo].[AccountBillings] (
    [Id]                   INT             IDENTITY (1, 1) NOT NULL,
    [CreationTime]         DATETIME2 (7)   NOT NULL,
    [CreatorUserId]        BIGINT          NULL,
    [LastModificationTime] DATETIME2 (7)   NULL,
    [LastModifierUserId]   BIGINT          NULL,
    [IsDeleted]            BIT             NOT NULL,
    [DeleterUserId]        BIGINT          NULL,
    [DeletionTime]         DATETIME2 (7)   NULL,
    [TenantId]             INT             NULL,
    [BillID]               NVARCHAR (256)  NOT NULL,
    [BillDateFrom]         DATETIME2 (7)   NOT NULL,
    [BillDateTo]           DATETIME2 (7)   NOT NULL,
    [OpenAmount]           DECIMAL (18, 2) NULL,
    [BillAmount]           DECIMAL (18, 2) NULL,
    [InfoSeedServiceId]    INT             NULL,
    [ServiceTypeId]        INT             NULL,
    [CurrencyId]           INT             NULL,
    [BillingId]            INT             NULL,
    CONSTRAINT [PK_AccountBillings] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[AccountBillings].[IX_AccountBillings_BillingId]...';


GO
CREATE NONCLUSTERED INDEX [IX_AccountBillings_BillingId]
    ON [dbo].[AccountBillings]([BillingId] ASC);


GO
PRINT N'Creating [dbo].[AccountBillings].[IX_AccountBillings_TenantId]...';


GO
CREATE NONCLUSTERED INDEX [IX_AccountBillings_TenantId]
    ON [dbo].[AccountBillings]([TenantId] ASC);


GO
PRINT N'Creating [dbo].[AccountBillings].[IX_AccountBillings_ServiceTypeId]...';


GO
CREATE NONCLUSTERED INDEX [IX_AccountBillings_ServiceTypeId]
    ON [dbo].[AccountBillings]([ServiceTypeId] ASC);


GO
PRINT N'Creating [dbo].[AccountBillings].[IX_AccountBillings_InfoSeedServiceId]...';


GO
CREATE NONCLUSTERED INDEX [IX_AccountBillings_InfoSeedServiceId]
    ON [dbo].[AccountBillings]([InfoSeedServiceId] ASC);


GO
PRINT N'Creating [dbo].[AccountBillings].[IX_AccountBillings_CurrencyId]...';


GO
CREATE NONCLUSTERED INDEX [IX_AccountBillings_CurrencyId]
    ON [dbo].[AccountBillings]([CurrencyId] ASC);


GO
PRINT N'Creating [dbo].[ActiveContactPerMonth]...';


GO
CREATE TABLE [dbo].[ActiveContactPerMonth] (
    [Id]                  INT      IDENTITY (1, 1) NOT NULL,
    [TenantId]            INT      NOT NULL,
    [Year]                INT      NOT NULL,
    [Month]               INT      NOT NULL,
    [LastMessageDateTime] DATETIME NOT NULL,
    [ContactID]           INT      NULL,
    CONSTRAINT [PK_ActiveContactPerMonth] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[AppBinaryObjects]...';


GO
CREATE TABLE [dbo].[AppBinaryObjects] (
    [Id]       UNIQUEIDENTIFIER NOT NULL,
    [Bytes]    VARBINARY (MAX)  NOT NULL,
    [TenantId] INT              NULL,
    [FileName] NVARCHAR (MAX)   NULL,
    [MimeType] NVARCHAR (MAX)   NULL,
    CONSTRAINT [PK_AppBinaryObjects] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[AppBinaryObjects].[IX_AppBinaryObjects_TenantId]...';


GO
CREATE NONCLUSTERED INDEX [IX_AppBinaryObjects_TenantId]
    ON [dbo].[AppBinaryObjects]([TenantId] ASC);


GO
PRINT N'Creating [dbo].[AppChatMessages]...';


GO
CREATE TABLE [dbo].[AppChatMessages] (
    [Id]                BIGINT           IDENTITY (1, 1) NOT NULL,
    [CreationTime]      DATETIME2 (7)    NOT NULL,
    [Message]           NVARCHAR (MAX)   NOT NULL,
    [ReadState]         INT              NOT NULL,
    [Side]              INT              NOT NULL,
    [TargetTenantId]    INT              NULL,
    [TargetUserId]      BIGINT           NOT NULL,
    [TenantId]          INT              NULL,
    [UserId]            BIGINT           NOT NULL,
    [SharedMessageId]   UNIQUEIDENTIFIER NULL,
    [ReceiverReadState] INT              NOT NULL,
    CONSTRAINT [PK_AppChatMessages] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[AppChatMessages].[IX_AppChatMessages_TargetTenantId_TargetUserId_ReadState]...';


GO
CREATE NONCLUSTERED INDEX [IX_AppChatMessages_TargetTenantId_TargetUserId_ReadState]
    ON [dbo].[AppChatMessages]([TargetTenantId] ASC, [TargetUserId] ASC, [ReadState] ASC);


GO
PRINT N'Creating [dbo].[AppChatMessages].[IX_AppChatMessages_TargetTenantId_UserId_ReadState]...';


GO
CREATE NONCLUSTERED INDEX [IX_AppChatMessages_TargetTenantId_UserId_ReadState]
    ON [dbo].[AppChatMessages]([TargetTenantId] ASC, [UserId] ASC, [ReadState] ASC);


GO
PRINT N'Creating [dbo].[AppChatMessages].[IX_AppChatMessages_TenantId_TargetUserId_ReadState]...';


GO
CREATE NONCLUSTERED INDEX [IX_AppChatMessages_TenantId_TargetUserId_ReadState]
    ON [dbo].[AppChatMessages]([TenantId] ASC, [TargetUserId] ASC, [ReadState] ASC);


GO
PRINT N'Creating [dbo].[AppChatMessages].[IX_AppChatMessages_TenantId_UserId_ReadState]...';


GO
CREATE NONCLUSTERED INDEX [IX_AppChatMessages_TenantId_UserId_ReadState]
    ON [dbo].[AppChatMessages]([TenantId] ASC, [UserId] ASC, [ReadState] ASC);


GO
PRINT N'Creating [dbo].[AppFriendships]...';


GO
CREATE TABLE [dbo].[AppFriendships] (
    [Id]                     BIGINT           IDENTITY (1, 1) NOT NULL,
    [CreationTime]           DATETIME2 (7)    NOT NULL,
    [FriendProfilePictureId] UNIQUEIDENTIFIER NULL,
    [FriendTenancyName]      NVARCHAR (MAX)   NULL,
    [FriendTenantId]         INT              NULL,
    [FriendUserId]           BIGINT           NOT NULL,
    [FriendUserName]         NVARCHAR (256)   NOT NULL,
    [State]                  INT              NOT NULL,
    [TenantId]               INT              NULL,
    [UserId]                 BIGINT           NOT NULL,
    CONSTRAINT [PK_AppFriendships] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[AppFriendships].[IX_AppFriendships_FriendTenantId_FriendUserId]...';


GO
CREATE NONCLUSTERED INDEX [IX_AppFriendships_FriendTenantId_FriendUserId]
    ON [dbo].[AppFriendships]([FriendTenantId] ASC, [FriendUserId] ASC);


GO
PRINT N'Creating [dbo].[AppFriendships].[IX_AppFriendships_FriendTenantId_UserId]...';


GO
CREATE NONCLUSTERED INDEX [IX_AppFriendships_FriendTenantId_UserId]
    ON [dbo].[AppFriendships]([FriendTenantId] ASC, [UserId] ASC);


GO
PRINT N'Creating [dbo].[AppFriendships].[IX_AppFriendships_TenantId_FriendUserId]...';


GO
CREATE NONCLUSTERED INDEX [IX_AppFriendships_TenantId_FriendUserId]
    ON [dbo].[AppFriendships]([TenantId] ASC, [FriendUserId] ASC);


GO
PRINT N'Creating [dbo].[AppFriendships].[IX_AppFriendships_TenantId_UserId]...';


GO
CREATE NONCLUSTERED INDEX [IX_AppFriendships_TenantId_UserId]
    ON [dbo].[AppFriendships]([TenantId] ASC, [UserId] ASC);


GO
PRINT N'Creating [dbo].[AppInvoices]...';


GO
CREATE TABLE [dbo].[AppInvoices] (
    [Id]              INT            IDENTITY (1, 1) NOT NULL,
    [InvoiceDate]     DATETIME2 (7)  NOT NULL,
    [InvoiceNo]       NVARCHAR (MAX) NULL,
    [TenantAddress]   NVARCHAR (MAX) NULL,
    [TenantLegalName] NVARCHAR (MAX) NULL,
    [TenantTaxNo]     NVARCHAR (MAX) NULL,
    CONSTRAINT [PK_AppInvoices] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[AppSubscriptionPayments]...';


GO
CREATE TABLE [dbo].[AppSubscriptionPayments] (
    [Id]                   BIGINT          IDENTITY (1, 1) NOT NULL,
    [Amount]               DECIMAL (18, 2) NOT NULL,
    [CreationTime]         DATETIME2 (7)   NOT NULL,
    [CreatorUserId]        BIGINT          NULL,
    [DayCount]             INT             NOT NULL,
    [DeleterUserId]        BIGINT          NULL,
    [DeletionTime]         DATETIME2 (7)   NULL,
    [EditionId]            INT             NOT NULL,
    [Gateway]              INT             NOT NULL,
    [IsDeleted]            BIT             NOT NULL,
    [LastModificationTime] DATETIME2 (7)   NULL,
    [LastModifierUserId]   BIGINT          NULL,
    [SuccessUrl]           NVARCHAR (MAX)  NULL,
    [PaymentPeriodType]    INT             NULL,
    [Status]               INT             NOT NULL,
    [TenantId]             INT             NOT NULL,
    [InvoiceNo]            NVARCHAR (MAX)  NULL,
    [Description]          NVARCHAR (MAX)  NULL,
    [ErrorUrl]             NVARCHAR (MAX)  NULL,
    [ExternalPaymentId]    NVARCHAR (450)  NULL,
    [IsRecurring]          BIT             NOT NULL,
    [EditionPaymentType]   INT             NOT NULL,
    CONSTRAINT [PK_AppSubscriptionPayments] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[AppSubscriptionPayments].[IX_AppSubscriptionPayments_ExternalPaymentId_Gateway]...';


GO
CREATE NONCLUSTERED INDEX [IX_AppSubscriptionPayments_ExternalPaymentId_Gateway]
    ON [dbo].[AppSubscriptionPayments]([ExternalPaymentId] ASC, [Gateway] ASC);


GO
PRINT N'Creating [dbo].[AppSubscriptionPayments].[IX_AppSubscriptionPayments_Status_CreationTime]...';


GO
CREATE NONCLUSTERED INDEX [IX_AppSubscriptionPayments_Status_CreationTime]
    ON [dbo].[AppSubscriptionPayments]([Status] ASC, [CreationTime] ASC);


GO
PRINT N'Creating [dbo].[AppSubscriptionPayments].[IX_AppSubscriptionPayments_EditionId]...';


GO
CREATE NONCLUSTERED INDEX [IX_AppSubscriptionPayments_EditionId]
    ON [dbo].[AppSubscriptionPayments]([EditionId] ASC);


GO
PRINT N'Creating [dbo].[AppSubscriptionPaymentsExtensionData]...';


GO
CREATE TABLE [dbo].[AppSubscriptionPaymentsExtensionData] (
    [Id]                    BIGINT         IDENTITY (1, 1) NOT NULL,
    [SubscriptionPaymentId] BIGINT         NOT NULL,
    [Key]                   NVARCHAR (450) NULL,
    [Value]                 NVARCHAR (MAX) NULL,
    [IsDeleted]             BIT            NOT NULL,
    CONSTRAINT [PK_AppSubscriptionPaymentsExtensionData] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[AppSubscriptionPaymentsExtensionData].[IX_AppSubscriptionPaymentsExtensionData_SubscriptionPaymentId_Key_IsDeleted]...';


GO
CREATE UNIQUE NONCLUSTERED INDEX [IX_AppSubscriptionPaymentsExtensionData_SubscriptionPaymentId_Key_IsDeleted]
    ON [dbo].[AppSubscriptionPaymentsExtensionData]([SubscriptionPaymentId] ASC, [Key] ASC, [IsDeleted] ASC) WHERE ([Key] IS NOT NULL);


GO
PRINT N'Creating [dbo].[AppUserDelegations]...';


GO
CREATE TABLE [dbo].[AppUserDelegations] (
    [Id]                   BIGINT        IDENTITY (1, 1) NOT NULL,
    [CreationTime]         DATETIME2 (7) NOT NULL,
    [CreatorUserId]        BIGINT        NULL,
    [LastModificationTime] DATETIME2 (7) NULL,
    [LastModifierUserId]   BIGINT        NULL,
    [IsDeleted]            BIT           NOT NULL,
    [DeleterUserId]        BIGINT        NULL,
    [DeletionTime]         DATETIME2 (7) NULL,
    [SourceUserId]         BIGINT        NOT NULL,
    [TargetUserId]         BIGINT        NOT NULL,
    [TenantId]             INT           NULL,
    [StartTime]            DATETIME2 (7) NOT NULL,
    [EndTime]              DATETIME2 (7) NOT NULL,
    CONSTRAINT [PK_AppUserDelegations] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[AppUserDelegations].[IX_AppUserDelegations_TenantId_SourceUserId]...';


GO
CREATE NONCLUSTERED INDEX [IX_AppUserDelegations_TenantId_SourceUserId]
    ON [dbo].[AppUserDelegations]([TenantId] ASC, [SourceUserId] ASC);


GO
PRINT N'Creating [dbo].[AppUserDelegations].[IX_AppUserDelegations_TenantId_TargetUserId]...';


GO
CREATE NONCLUSTERED INDEX [IX_AppUserDelegations_TenantId_TargetUserId]
    ON [dbo].[AppUserDelegations]([TenantId] ASC, [TargetUserId] ASC);


GO
PRINT N'Creating [dbo].[Areas]...';


GO
CREATE TABLE [dbo].[Areas] (
    [Id]             BIGINT         IDENTITY (1, 1) NOT NULL,
    [TenantId]       INT            NULL,
    [AreaName]       NVARCHAR (450) NOT NULL,
    [AreaCoordinate] NVARCHAR (450) NULL,
    [BranchID]       NVARCHAR (MAX) NULL,
    [UserId]         INT            NULL,
    CONSTRAINT [PK_Areas] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Areas].[IX_Areas_TenantId]...';


GO
CREATE NONCLUSTERED INDEX [IX_Areas_TenantId]
    ON [dbo].[Areas]([TenantId] ASC);


GO
PRINT N'Creating [dbo].[Banks]...';


GO
CREATE TABLE [dbo].[Banks] (
    [Id]       INT            IDENTITY (1, 1) NOT NULL,
    [BankName] NVARCHAR (256) NOT NULL,
    CONSTRAINT [PK_Banks] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Billings]...';


GO
CREATE TABLE [dbo].[Billings] (
    [Id]                   INT             IDENTITY (1, 1) NOT NULL,
    [CreationTime]         DATETIME2 (7)   NOT NULL,
    [CreatorUserId]        BIGINT          NULL,
    [LastModificationTime] DATETIME2 (7)   NULL,
    [LastModifierUserId]   BIGINT          NULL,
    [IsDeleted]            BIT             NOT NULL,
    [DeleterUserId]        BIGINT          NULL,
    [DeletionTime]         DATETIME2 (7)   NULL,
    [TenantId]             INT             NULL,
    [BillingID]            NVARCHAR (256)  NOT NULL,
    [BillingDate]          DATETIME2 (7)   NOT NULL,
    [TotalAmount]          DECIMAL (18, 2) NOT NULL,
    [BillPeriodTo]         DATETIME2 (7)   NOT NULL,
    [BillPeriodFrom]       DATETIME2 (7)   NOT NULL,
    [DueDate]              DATETIME2 (7)   NOT NULL,
    [CurrencyId]           INT             NOT NULL,
    [IsPayed]              BIT             NOT NULL,
    [TenantServiceId]      INT             NOT NULL,
    CONSTRAINT [PK_Billings] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Billings].[IX_Billings_TenantServiceId]...';


GO
CREATE NONCLUSTERED INDEX [IX_Billings_TenantServiceId]
    ON [dbo].[Billings]([TenantServiceId] ASC);


GO
PRINT N'Creating [dbo].[Billings].[IX_Billings_TenantId]...';


GO
CREATE NONCLUSTERED INDEX [IX_Billings_TenantId]
    ON [dbo].[Billings]([TenantId] ASC);


GO
PRINT N'Creating [dbo].[Billings].[IX_Billings_CurrencyId]...';


GO
CREATE NONCLUSTERED INDEX [IX_Billings_CurrencyId]
    ON [dbo].[Billings]([CurrencyId] ASC);


GO
PRINT N'Creating [dbo].[BranchAreas]...';


GO
CREATE TABLE [dbo].[BranchAreas] (
    [Id]                   BIGINT        IDENTITY (1, 1) NOT NULL,
    [CreatorUserId]        BIGINT        NULL,
    [LastModificationTime] DATETIME2 (7) NULL,
    [LastModifierUserId]   BIGINT        NULL,
    [IsDeleted]            BIT           NOT NULL,
    [DeleterUserId]        BIGINT        NULL,
    [DeletionTime]         DATETIME2 (7) NULL,
    [TenantId]             INT           NULL,
    [CreationTime]         DATETIME2 (7) NOT NULL,
    [AreaId]               BIGINT        NOT NULL,
    [BranchId]             BIGINT        NOT NULL,
    CONSTRAINT [PK_BranchAreas] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[BranchAreas].[IX_BranchAreas_TenantId]...';


GO
CREATE NONCLUSTERED INDEX [IX_BranchAreas_TenantId]
    ON [dbo].[BranchAreas]([TenantId] ASC);


GO
PRINT N'Creating [dbo].[BranchAreas].[IX_BranchAreas_BranchId]...';


GO
CREATE NONCLUSTERED INDEX [IX_BranchAreas_BranchId]
    ON [dbo].[BranchAreas]([BranchId] ASC);


GO
PRINT N'Creating [dbo].[BranchAreas].[IX_BranchAreas_AreaId]...';


GO
CREATE NONCLUSTERED INDEX [IX_BranchAreas_AreaId]
    ON [dbo].[BranchAreas]([AreaId] ASC);


GO
PRINT N'Creating [dbo].[Branches]...';


GO
CREATE TABLE [dbo].[Branches] (
    [Id]             BIGINT          IDENTITY (1, 1) NOT NULL,
    [TenantId]       INT             NULL,
    [Name]           NVARCHAR (MAX)  NOT NULL,
    [DeliveryCost]   DECIMAL (18, 2) NULL,
    [RestaurantName] NVARCHAR (MAX)  NULL,
    [BranchAreaId]   INT             NOT NULL,
    CONSTRAINT [PK_Branches] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Branches].[IX_Branches_TenantId]...';


GO
CREATE NONCLUSTERED INDEX [IX_Branches_TenantId]
    ON [dbo].[Branches]([TenantId] ASC);


GO
PRINT N'Creating [dbo].[Caption]...';


GO
CREATE TABLE [dbo].[Caption] (
    [Id]                   INT            IDENTITY (1, 1) NOT NULL,
    [CreationTime]         DATETIME2 (7)  NOT NULL,
    [CreatorUserId]        BIGINT         NULL,
    [LastModificationTime] DATETIME2 (7)  NULL,
    [LastModifierUserId]   BIGINT         NULL,
    [IsDeleted]            BIT            NOT NULL,
    [DeleterUserId]        BIGINT         NULL,
    [DeletionTime]         DATETIME2 (7)  NULL,
    [TenantId]             INT            NULL,
    [Text]                 NVARCHAR (MAX) NULL,
    [LanguageBotId]        INT            NOT NULL,
    [TextResourceId]       INT            NOT NULL,
    CONSTRAINT [PK_Caption] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Caption].[IX_Caption_TextResourceId]...';


GO
CREATE NONCLUSTERED INDEX [IX_Caption_TextResourceId]
    ON [dbo].[Caption]([TextResourceId] ASC);


GO
PRINT N'Creating [dbo].[Caption].[IX_Caption_LanguageBotId]...';


GO
CREATE NONCLUSTERED INDEX [IX_Caption_LanguageBotId]
    ON [dbo].[Caption]([LanguageBotId] ASC);


GO
PRINT N'Creating [dbo].[ChatStatuses]...';


GO
CREATE TABLE [dbo].[ChatStatuses] (
    [Id]             INT             IDENTITY (1, 1) NOT NULL,
    [CreationTime]   DATETIME2 (7)   NOT NULL,
    [CreatorUserId]  BIGINT          NULL,
    [ChatStatusName] NVARCHAR (1024) NOT NULL,
    [IsEnabled]      BIT             NOT NULL,
    CONSTRAINT [PK_ChatStatuses] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Cities]...';


GO
CREATE TABLE [dbo].[Cities] (
    [Id]       BIGINT         IDENTITY (1, 1) NOT NULL,
    [TenantId] INT            NULL,
    [Name]     NVARCHAR (450) NOT NULL,
    CONSTRAINT [PK_Cities] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Cities].[IX_Cities_TenantId]...';


GO
CREATE NONCLUSTERED INDEX [IX_Cities_TenantId]
    ON [dbo].[Cities]([TenantId] ASC);


GO
PRINT N'Creating [dbo].[ContactNotifications]...';


GO
CREATE TABLE [dbo].[ContactNotifications] (
    [Id]                     INT            IDENTITY (1, 1) NOT NULL,
    [CreationTime]           DATETIME2 (7)  NOT NULL,
    [CreatorUserId]          BIGINT         NULL,
    [LastModificationTime]   DATETIME2 (7)  NULL,
    [LastModifierUserId]     BIGINT         NULL,
    [IsDeleted]              BIT            NOT NULL,
    [DeleterUserId]          BIGINT         NULL,
    [DeletionTime]           DATETIME2 (7)  NULL,
    [TenantId]               INT            NULL,
    [ContactId]              NVARCHAR (MAX) NOT NULL,
    [NotificationId]         NVARCHAR (MAX) NOT NULL,
    [NotificationCreateDate] DATETIME2 (7)  NOT NULL,
    [NotificationText]       NVARCHAR (MAX) NOT NULL,
    [UserId]                 INT            NOT NULL,
    CONSTRAINT [PK_ContactNotifications] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Contacts]...';


GO
CREATE TABLE [dbo].[Contacts] (
    [Id]                     INT            IDENTITY (1, 1) NOT NULL,
    [TenantId]               INT            NULL,
    [AvatarUrl]              NVARCHAR (512) NULL,
    [DisplayName]            NVARCHAR (512) NULL,
    [PhoneNumber]            NVARCHAR (512) NULL,
    [SunshineAppID]          NVARCHAR (512) NULL,
    [IsLockedByAgent]        BIT            NOT NULL,
    [LockedByAgentName]      NVARCHAR (512) NULL,
    [IsOpen]                 BIT            NOT NULL,
    [Website]                NVARCHAR (512) NULL,
    [EmailAddress]           NVARCHAR (512) NULL,
    [Description]            NVARCHAR (MAX) NULL,
    [ChatStatuseId]          INT            NULL,
    [ContactStatuseId]       INT            NULL,
    [CreationTime]           DATETIME2 (7)  NOT NULL,
    [CreatorUserId]          BIGINT         NULL,
    [DeleterUserId]          BIGINT         NULL,
    [DeletionTime]           DATETIME2 (7)  NULL,
    [IsDeleted]              BIT            NOT NULL,
    [LastModificationTime]   DATETIME2 (7)  NULL,
    [LastModifierUserId]     BIGINT         NULL,
    [UserId]                 NVARCHAR (MAX) NULL,
    [IsConversationExpired]  BIT            NOT NULL,
    [IsBlock]                BIT            NOT NULL,
    [SunshineConversationId] NVARCHAR (MAX) NULL,
    CONSTRAINT [PK_Contacts] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Contacts].[IX_Contacts_TenantId]...';


GO
CREATE NONCLUSTERED INDEX [IX_Contacts_TenantId]
    ON [dbo].[Contacts]([TenantId] ASC);


GO
PRINT N'Creating [dbo].[Contacts].[IX_Contacts_ContactStatuseId]...';


GO
CREATE NONCLUSTERED INDEX [IX_Contacts_ContactStatuseId]
    ON [dbo].[Contacts]([ContactStatuseId] ASC);


GO
PRINT N'Creating [dbo].[Contacts].[IX_Contacts_ChatStatuseId]...';


GO
CREATE NONCLUSTERED INDEX [IX_Contacts_ChatStatuseId]
    ON [dbo].[Contacts]([ChatStatuseId] ASC);


GO
PRINT N'Creating [dbo].[ContactStatuses]...';


GO
CREATE TABLE [dbo].[ContactStatuses] (
    [Id]                INT             IDENTITY (1, 1) NOT NULL,
    [CreationTime]      DATETIME2 (7)   NOT NULL,
    [CreatorUserId]     BIGINT          NULL,
    [ContactStatusName] NVARCHAR (1024) NOT NULL,
    [IsEnabled]         BIT             NOT NULL,
    CONSTRAINT [PK_ContactStatuses] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Currencies]...';


GO
CREATE TABLE [dbo].[Currencies] (
    [Id]            INT            IDENTITY (1, 1) NOT NULL,
    [CreationTime]  DATETIME2 (7)  NOT NULL,
    [CreatorUserId] BIGINT         NULL,
    [CurrencyName]  NVARCHAR (256) NOT NULL,
    [ISOName]       NVARCHAR (3)   NOT NULL,
    CONSTRAINT [PK_Currencies] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Customers]...';


GO
CREATE TABLE [dbo].[Customers] (
    [Id]                   BIGINT         IDENTITY (1, 1) NOT NULL,
    [CreatorUserId]        BIGINT         NULL,
    [LastModificationTime] DATETIME2 (7)  NULL,
    [LastModifierUserId]   BIGINT         NULL,
    [DeleterUserId]        BIGINT         NULL,
    [TenantId]             INT            NULL,
    [CustomerName]         NVARCHAR (150) NOT NULL,
    [PhoneNumber]          NVARCHAR (100) NULL,
    [CustomerAddress]      NVARCHAR (MAX) NULL,
    [CreationTime]         DATETIME2 (7)  NOT NULL,
    [DeletionTime]         DATETIME2 (7)  NULL,
    [EmailAddress]         NVARCHAR (256) NOT NULL,
    [IsActive]             BIT            NOT NULL,
    [IsDeleted]            BIT            NOT NULL,
    [GenderId]             BIGINT         NULL,
    [CityId]               BIGINT         NULL,
    CONSTRAINT [PK_Customers] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Customers].[IX_Customers_TenantId]...';


GO
CREATE NONCLUSTERED INDEX [IX_Customers_TenantId]
    ON [dbo].[Customers]([TenantId] ASC);


GO
PRINT N'Creating [dbo].[Customers].[IX_Customers_GenderId]...';


GO
CREATE NONCLUSTERED INDEX [IX_Customers_GenderId]
    ON [dbo].[Customers]([GenderId] ASC);


GO
PRINT N'Creating [dbo].[Customers].[IX_Customers_CityId]...';


GO
CREATE NONCLUSTERED INDEX [IX_Customers_CityId]
    ON [dbo].[Customers]([CityId] ASC);


GO
PRINT N'Creating [dbo].[DeliveryChanges]...';


GO
CREATE TABLE [dbo].[DeliveryChanges] (
    [Id]                      BIGINT          IDENTITY (1, 1) NOT NULL,
    [CreatorUserId]           BIGINT          NULL,
    [LastModifierUserId]      BIGINT          NULL,
    [IsDeleted]               BIT             NOT NULL,
    [DeleterUserId]           BIGINT          NULL,
    [TenantId]                INT             NULL,
    [Charges]                 DECIMAL (18, 2) NULL,
    [DeliveryServiceProvider] NVARCHAR (450)  NULL,
    [CreationTime]            DATETIME2 (7)   NOT NULL,
    [DeletionTime]            DATETIME2 (7)   NULL,
    [LastModificationTime]    DATETIME2 (7)   NULL,
    [AreaId]                  BIGINT          NOT NULL,
    CONSTRAINT [PK_DeliveryChanges] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[DeliveryChanges].[IX_DeliveryChanges_TenantId]...';


GO
CREATE NONCLUSTERED INDEX [IX_DeliveryChanges_TenantId]
    ON [dbo].[DeliveryChanges]([TenantId] ASC);


GO
PRINT N'Creating [dbo].[DeliveryChanges].[IX_DeliveryChanges_AreaId]...';


GO
CREATE NONCLUSTERED INDEX [IX_DeliveryChanges_AreaId]
    ON [dbo].[DeliveryChanges]([AreaId] ASC);


GO
PRINT N'Creating [dbo].[Evaluations]...';


GO
CREATE TABLE [dbo].[Evaluations] (
    [Id]              BIGINT         IDENTITY (1, 1) NOT NULL,
    [TenantId]        INT            NULL,
    [OrderNumber]     BIGINT         NOT NULL,
    [ContactName]     NVARCHAR (MAX) NULL,
    [EvaluationsText] NVARCHAR (MAX) NOT NULL,
    [CreationTime]    DATETIME2 (7)  NOT NULL,
    [OrderId]         INT            NOT NULL,
    [PhoneNumber]     NVARCHAR (MAX) NULL,
    CONSTRAINT [PK_Evaluations] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[ExtraOrderDetail]...';


GO
CREATE TABLE [dbo].[ExtraOrderDetail] (
    [Id]            BIGINT          IDENTITY (1, 1) NOT NULL,
    [TenantId]      INT             NULL,
    [Name]          NVARCHAR (MAX)  NULL,
    [Quantity]      INT             NULL,
    [UnitPrice]     DECIMAL (18, 2) NULL,
    [Total]         DECIMAL (18, 2) NULL,
    [OrderDetailId] BIGINT          NULL,
    CONSTRAINT [PK_ExtraOrderDetail] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[ExtraOrderDetail].[IX_ExtraOrderDetail_OrderDetailId]...';


GO
CREATE NONCLUSTERED INDEX [IX_ExtraOrderDetail_OrderDetailId]
    ON [dbo].[ExtraOrderDetail]([OrderDetailId] ASC);


GO
PRINT N'Creating [dbo].[Genders]...';


GO
CREATE TABLE [dbo].[Genders] (
    [Id]       BIGINT         IDENTITY (1, 1) NOT NULL,
    [TenantId] INT            NULL,
    [Name]     NVARCHAR (450) NOT NULL,
    CONSTRAINT [PK_Genders] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Genders].[IX_Genders_TenantId]...';


GO
CREATE NONCLUSTERED INDEX [IX_Genders_TenantId]
    ON [dbo].[Genders]([TenantId] ASC);


GO
PRINT N'Creating [dbo].[InfoSeedServices]...';


GO
CREATE TABLE [dbo].[InfoSeedServices] (
    [Id]                   INT             IDENTITY (1, 1) NOT NULL,
    [CreationTime]         DATETIME2 (7)   NOT NULL,
    [CreatorUserId]        BIGINT          NULL,
    [LastModificationTime] DATETIME2 (7)   NULL,
    [LastModifierUserId]   BIGINT          NULL,
    [IsDeleted]            BIT             NOT NULL,
    [DeleterUserId]        BIGINT          NULL,
    [DeletionTime]         DATETIME2 (7)   NULL,
    [ServiceID]            NVARCHAR (1024) NOT NULL,
    [ServiceFees]          DECIMAL (18, 2) NOT NULL,
    [ServiceName]          NVARCHAR (1024) NOT NULL,
    [ServiceCreationDate]  DATETIME2 (7)   NOT NULL,
    [ServiceStoppingDate]  DATETIME2 (7)   NOT NULL,
    [Remarks]              NVARCHAR (MAX)  NULL,
    [ServiceTypeId]        INT             NOT NULL,
    [ServiceStatusId]      INT             NOT NULL,
    [ServiceFrquencyId]    INT             NOT NULL,
    [IsFeesPerTransaction] BIT             NOT NULL,
    CONSTRAINT [PK_InfoSeedServices] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[InfoSeedServices].[IX_InfoSeedServices_ServiceTypeId]...';


GO
CREATE NONCLUSTERED INDEX [IX_InfoSeedServices_ServiceTypeId]
    ON [dbo].[InfoSeedServices]([ServiceTypeId] ASC);


GO
PRINT N'Creating [dbo].[InfoSeedServices].[IX_InfoSeedServices_ServiceStatusId]...';


GO
CREATE NONCLUSTERED INDEX [IX_InfoSeedServices_ServiceStatusId]
    ON [dbo].[InfoSeedServices]([ServiceStatusId] ASC);


GO
PRINT N'Creating [dbo].[InfoSeedServices].[IX_InfoSeedServices_ServiceFrquencyId]...';


GO
CREATE NONCLUSTERED INDEX [IX_InfoSeedServices_ServiceFrquencyId]
    ON [dbo].[InfoSeedServices]([ServiceFrquencyId] ASC);


GO
PRINT N'Creating [dbo].[ItemAdditions]...';


GO
CREATE TABLE [dbo].[ItemAdditions] (
    [Id]       BIGINT          IDENTITY (1, 1) NOT NULL,
    [TenantId] INT             NULL,
    [Name]     NVARCHAR (MAX)  NOT NULL,
    [Price]    DECIMAL (18, 2) NULL,
    [ItemId]   BIGINT          NULL,
    [SKU]      NVARCHAR (MAX)  NULL,
    CONSTRAINT [PK_ItemAdditions] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[ItemAdditions].[IX_ItemAdditions_ItemId]...';


GO
CREATE NONCLUSTERED INDEX [IX_ItemAdditions_ItemId]
    ON [dbo].[ItemAdditions]([ItemId] ASC);


GO
PRINT N'Creating [dbo].[ItemCategorys]...';


GO
CREATE TABLE [dbo].[ItemCategorys] (
    [Id]        BIGINT         IDENTITY (1, 1) NOT NULL,
    [TenantId]  INT            NULL,
    [Name]      NVARCHAR (450) NOT NULL,
    [IsDeleted] BIT            NOT NULL,
    CONSTRAINT [PK_ItemCategorys] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[ItemCategorys].[IX_ItemCategorys_TenantId]...';


GO
CREATE NONCLUSTERED INDEX [IX_ItemCategorys_TenantId]
    ON [dbo].[ItemCategorys]([TenantId] ASC);


GO
PRINT N'Creating [dbo].[Items]...';


GO
CREATE TABLE [dbo].[Items] (
    [Id]                   BIGINT          IDENTITY (1, 1) NOT NULL,
    [CreatorUserId]        BIGINT          NULL,
    [LastModifierUserId]   BIGINT          NULL,
    [IsDeleted]            BIT             NOT NULL,
    [DeleterUserId]        BIGINT          NULL,
    [TenantId]             INT             NULL,
    [ItemDescription]      NVARCHAR (MAX)  NULL,
    [Ingredients]          NVARCHAR (MAX)  NULL,
    [ItemName]             NVARCHAR (450)  NOT NULL,
    [IsInService]          BIT             NOT NULL,
    [CategoryNames]        NVARCHAR (MAX)  NULL,
    [CreationTime]         DATETIME2 (7)   NOT NULL,
    [DeletionTime]         DATETIME2 (7)   NULL,
    [LastModificationTime] DATETIME2 (7)   NULL,
    [ImageUri]             NVARCHAR (MAX)  NULL,
    [Price]                DECIMAL (18, 2) NULL,
    [Priority]             INT             NOT NULL,
    [MenuId]               BIGINT          NULL,
    [ItemCategoryId]       BIGINT          NULL,
    [SKU]                  NVARCHAR (MAX)  NULL,
    CONSTRAINT [PK_Items] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Items].[IX_Items_TenantId]...';


GO
CREATE NONCLUSTERED INDEX [IX_Items_TenantId]
    ON [dbo].[Items]([TenantId] ASC);


GO
PRINT N'Creating [dbo].[Items].[IX_Items_MenuId]...';


GO
CREATE NONCLUSTERED INDEX [IX_Items_MenuId]
    ON [dbo].[Items]([MenuId] ASC);


GO
PRINT N'Creating [dbo].[Items].[IX_Items_ItemCategoryId]...';


GO
CREATE NONCLUSTERED INDEX [IX_Items_ItemCategoryId]
    ON [dbo].[Items]([ItemCategoryId] ASC);


GO
PRINT N'Creating [dbo].[LanguageBot]...';


GO
CREATE TABLE [dbo].[LanguageBot] (
    [Id]                   INT            IDENTITY (1, 1) NOT NULL,
    [CreationTime]         DATETIME2 (7)  NOT NULL,
    [CreatorUserId]        BIGINT         NULL,
    [LastModificationTime] DATETIME2 (7)  NULL,
    [LastModifierUserId]   BIGINT         NULL,
    [IsDeleted]            BIT            NOT NULL,
    [DeleterUserId]        BIGINT         NULL,
    [DeletionTime]         DATETIME2 (7)  NULL,
    [TenantId]             INT            NULL,
    [Name]                 NVARCHAR (MAX) NULL,
    [ISO]                  NVARCHAR (MAX) NULL,
    CONSTRAINT [PK_LanguageBot] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[LocationDeliveryCost]...';


GO
CREATE TABLE [dbo].[LocationDeliveryCost] (
    [Id]           INT             IDENTITY (1, 1) NOT NULL,
    [TenantId]     INT             NOT NULL,
    [LocationId]   INT             NOT NULL,
    [DeliveryCost] DECIMAL (18, 3) NOT NULL,
    [BranchAreaId] INT             NULL,
    CONSTRAINT [PK_LocationDeliveryCost] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[LocationLevels]...';


GO
CREATE TABLE [dbo].[LocationLevels] (
    [Id]        INT            IDENTITY (1, 1) NOT NULL,
    [LevelName] NVARCHAR (256) NOT NULL,
    CONSTRAINT [PK_LocationLevels] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Locations]...';


GO
CREATE TABLE [dbo].[Locations] (
    [Id]             INT            IDENTITY (1, 1) NOT NULL,
    [LocationName]   NVARCHAR (512) NOT NULL,
    [LevelId]        INT            NOT NULL,
    [ParentId]       INT            NULL,
    [GoogleURL]      NVARCHAR (MAX) NULL,
    [LocationNameEn] VARCHAR (512)  NULL,
    CONSTRAINT [PK_Locations] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[MenuDetails]...';


GO
CREATE TABLE [dbo].[MenuDetails] (
    [Id]           BIGINT          IDENTITY (1, 1) NOT NULL,
    [TenantId]     INT             NULL,
    [Description]  NVARCHAR (MAX)  NULL,
    [IsStandAlone] BIT             NOT NULL,
    [Price]        DECIMAL (18, 2) NULL,
    CONSTRAINT [PK_MenuDetails] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[MenuDetails].[IX_MenuDetails_TenantId]...';


GO
CREATE NONCLUSTERED INDEX [IX_MenuDetails_TenantId]
    ON [dbo].[MenuDetails]([TenantId] ASC);


GO
PRINT N'Creating [dbo].[MenuItemStatuses]...';


GO
CREATE TABLE [dbo].[MenuItemStatuses] (
    [Id]   BIGINT         IDENTITY (1, 1) NOT NULL,
    [Name] NVARCHAR (450) NOT NULL,
    CONSTRAINT [PK_MenuItemStatuses] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Menus]...';


GO
CREATE TABLE [dbo].[Menus] (
    [Id]                BIGINT          IDENTITY (1, 1) NOT NULL,
    [TenantId]          INT             NULL,
    [MenuName]          NVARCHAR (450)  NOT NULL,
    [MenuDescription]   NVARCHAR (MAX)  NULL,
    [EffectiveTimeFrom] DATETIME2 (7)   NULL,
    [EffectiveTimeTo]   DATETIME2 (7)   NULL,
    [Tax]               DECIMAL (18, 2) NULL,
    [ImageUri]          NVARCHAR (450)  NULL,
    [Priority]          INT             NOT NULL,
    CONSTRAINT [PK_Menus] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Menus].[IX_Menus_TenantId]...';


GO
CREATE NONCLUSTERED INDEX [IX_Menus_TenantId]
    ON [dbo].[Menus]([TenantId] ASC);


GO
PRINT N'Creating [dbo].[OrderDetails]...';


GO
CREATE TABLE [dbo].[OrderDetails] (
    [Id]                   BIGINT          IDENTITY (1, 1) NOT NULL,
    [CreatorUserId]        BIGINT          NULL,
    [LastModifierUserId]   BIGINT          NULL,
    [IsDeleted]            BIT             NOT NULL,
    [DeleterUserId]        BIGINT          NULL,
    [TenantId]             INT             NULL,
    [Quantity]             INT             NULL,
    [UnitPrice]            DECIMAL (18, 2) NULL,
    [Total]                DECIMAL (18, 2) NULL,
    [Discount]             DECIMAL (18, 2) NULL,
    [TotalAfterDiscunt]    DECIMAL (18, 2) NULL,
    [Tax]                  DECIMAL (18, 2) NULL,
    [TotalAfterTax]        DECIMAL (18, 2) NULL,
    [CreationTime]         DATETIME2 (7)   NOT NULL,
    [DeletionTime]         DATETIME2 (7)   NULL,
    [LastModificationTime] DATETIME2 (7)   NULL,
    [OrderId]              BIGINT          NULL,
    [ItemId]               BIGINT          NULL,
    CONSTRAINT [PK_OrderDetails] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[OrderDetails].[IX_OrderDetails_TenantId]...';


GO
CREATE NONCLUSTERED INDEX [IX_OrderDetails_TenantId]
    ON [dbo].[OrderDetails]([TenantId] ASC);


GO
PRINT N'Creating [dbo].[OrderDetails].[IX_OrderDetails_OrderId]...';


GO
CREATE NONCLUSTERED INDEX [IX_OrderDetails_OrderId]
    ON [dbo].[OrderDetails]([OrderId] ASC);


GO
PRINT N'Creating [dbo].[OrderDetails].[IX_OrderDetails_ItemId]...';


GO
CREATE NONCLUSTERED INDEX [IX_OrderDetails_ItemId]
    ON [dbo].[OrderDetails]([ItemId] ASC);


GO
PRINT N'Creating [dbo].[OrderLineAdditionalIngredients]...';


GO
CREATE TABLE [dbo].[OrderLineAdditionalIngredients] (
    [Id]        BIGINT          IDENTITY (1, 1) NOT NULL,
    [TenantId]  INT             NULL,
    [Remarks]   NVARCHAR (MAX)  NULL,
    [Total]     DECIMAL (18, 2) NULL,
    [Quantity]  INT             NULL,
    [UnitPrice] DECIMAL (18, 2) NULL,
    [OrderId]   BIGINT          NULL,
    CONSTRAINT [PK_OrderLineAdditionalIngredients] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[OrderLineAdditionalIngredients].[IX_OrderLineAdditionalIngredients_TenantId]...';


GO
CREATE NONCLUSTERED INDEX [IX_OrderLineAdditionalIngredients_TenantId]
    ON [dbo].[OrderLineAdditionalIngredients]([TenantId] ASC);


GO
PRINT N'Creating [dbo].[OrderLineAdditionalIngredients].[IX_OrderLineAdditionalIngredients_OrderId]...';


GO
CREATE NONCLUSTERED INDEX [IX_OrderLineAdditionalIngredients_OrderId]
    ON [dbo].[OrderLineAdditionalIngredients]([OrderId] ASC);


GO
PRINT N'Creating [dbo].[OrderReceipts]...';


GO
CREATE TABLE [dbo].[OrderReceipts] (
    [Id]                   BIGINT          IDENTITY (1, 1) NOT NULL,
    [CreatorUserId]        BIGINT          NULL,
    [LastModifierUserId]   BIGINT          NULL,
    [IsDeleted]            BIT             NOT NULL,
    [DeleterUserId]        BIGINT          NULL,
    [TenantId]             INT             NULL,
    [OrderTime]            DATETIME2 (7)   NULL,
    [OrderAmount]          INT             NULL,
    [OrderDiscount]        DECIMAL (18, 2) NULL,
    [TotalAfterDiscunt]    DECIMAL (18, 2) NULL,
    [IsCashReceived]       BIT             NOT NULL,
    [CreationTime]         DATETIME2 (7)   NOT NULL,
    [DeletionTime]         DATETIME2 (7)   NULL,
    [LastModificationTime] DATETIME2 (7)   NULL,
    [OrderId]              BIGINT          NULL,
    CONSTRAINT [PK_OrderReceipts] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[OrderReceipts].[IX_OrderReceipts_TenantId]...';


GO
CREATE NONCLUSTERED INDEX [IX_OrderReceipts_TenantId]
    ON [dbo].[OrderReceipts]([TenantId] ASC);


GO
PRINT N'Creating [dbo].[OrderReceipts].[IX_OrderReceipts_OrderId]...';


GO
CREATE NONCLUSTERED INDEX [IX_OrderReceipts_OrderId]
    ON [dbo].[OrderReceipts]([OrderId] ASC);


GO
PRINT N'Creating [dbo].[Orders]...';


GO
CREATE TABLE [dbo].[Orders] (
    [Id]                   BIGINT          IDENTITY (1, 1) NOT NULL,
    [CreatorUserId]        BIGINT          NULL,
    [LastModifierUserId]   BIGINT          NULL,
    [IsDeleted]            BIT             NOT NULL,
    [DeleterUserId]        BIGINT          NULL,
    [TenantId]             INT             NULL,
    [OrderTime]            DATETIME2 (7)   NOT NULL,
    [OrderRemarks]         NVARCHAR (450)  NULL,
    [OrderNumber]          BIGINT          NOT NULL,
    [CreationTime]         DATETIME2 (7)   NOT NULL,
    [DeletionTime]         DATETIME2 (7)   NULL,
    [LastModificationTime] DATETIME2 (7)   NULL,
    [BranchId]             BIGINT          NULL,
    [ContactId]            INT             NULL,
    [AgentId]              BIGINT          NOT NULL,
    [IsLockByAgent]        BIT             NOT NULL,
    [LockByAgentName]      NVARCHAR (MAX)  NULL,
    [Total]                DECIMAL (18, 2) NULL,
    [OrderStatus]          INT             NOT NULL,
    [OrderType]            INT             NOT NULL,
    [Address]              NVARCHAR (MAX)  NULL,
    [AreaId]               BIGINT          NULL,
    [DeliveryCost]         DECIMAL (18, 2) NULL,
    [IsEvaluation]         BIT             NOT NULL,
    [IsBranchArea]         BIT             NOT NULL,
    [BranchAreaId]         INT             NOT NULL,
    [BranchAreaName]       NVARCHAR (MAX)  NULL,
    CONSTRAINT [PK_Orders] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Orders].[IX_Orders_TenantId]...';


GO
CREATE NONCLUSTERED INDEX [IX_Orders_TenantId]
    ON [dbo].[Orders]([TenantId] ASC);


GO
PRINT N'Creating [dbo].[Orders].[IX_Orders_ContactId]...';


GO
CREATE NONCLUSTERED INDEX [IX_Orders_ContactId]
    ON [dbo].[Orders]([ContactId] ASC);


GO
PRINT N'Creating [dbo].[Orders].[IX_Orders_BranchId]...';


GO
CREATE NONCLUSTERED INDEX [IX_Orders_BranchId]
    ON [dbo].[Orders]([BranchId] ASC);


GO
PRINT N'Creating [dbo].[Orders].[IX_Orders_AreaId]...';


GO
CREATE NONCLUSTERED INDEX [IX_Orders_AreaId]
    ON [dbo].[Orders]([AreaId] ASC);


GO
PRINT N'Creating [dbo].[OrderStatuses]...';


GO
CREATE TABLE [dbo].[OrderStatuses] (
    [Id]       BIGINT         IDENTITY (1, 1) NOT NULL,
    [TenantId] INT            NULL,
    [Name]     NVARCHAR (450) NOT NULL,
    CONSTRAINT [PK_OrderStatuses] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[OrderStatuses].[IX_OrderStatuses_TenantId]...';


GO
CREATE NONCLUSTERED INDEX [IX_OrderStatuses_TenantId]
    ON [dbo].[OrderStatuses]([TenantId] ASC);


GO
PRINT N'Creating [dbo].[PaymentMethods]...';


GO
CREATE TABLE [dbo].[PaymentMethods] (
    [Id]            INT            IDENTITY (1, 1) NOT NULL,
    [PaymnetMethod] NVARCHAR (256) NOT NULL,
    CONSTRAINT [PK_PaymentMethods] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Query]...';


GO
CREATE TABLE [dbo].[Query] (
    [Id]                     INT            NOT NULL,
    [TenantId]               INT            NULL,
    [AvatarUrl]              NVARCHAR (512) NULL,
    [DisplayName]            NVARCHAR (512) NULL,
    [PhoneNumber]            NVARCHAR (512) NULL,
    [SunshineAppID]          NVARCHAR (512) NULL,
    [IsLockedByAgent]        BIT            NOT NULL,
    [LockedByAgentName]      NVARCHAR (512) NULL,
    [IsOpen]                 BIT            NOT NULL,
    [Website]                NVARCHAR (512) NULL,
    [EmailAddress]           NVARCHAR (512) NULL,
    [Description]            NTEXT          NULL,
    [ChatStatuseId]          INT            NULL,
    [ContactStatuseId]       INT            NULL,
    [CreationTime]           DATETIME2 (7)  NOT NULL,
    [CreatorUserId]          BIGINT         NULL,
    [DeleterUserId]          BIGINT         NULL,
    [DeletionTime]           DATETIME2 (7)  NULL,
    [IsDeleted]              BIT            NOT NULL,
    [LastModificationTime]   DATETIME2 (7)  NULL,
    [LastModifierUserId]     BIGINT         NULL,
    [UserId]                 NTEXT          NULL,
    [IsConversationExpired]  BIT            NOT NULL,
    [IsBlock]                BIT            NOT NULL,
    [SunshineConversationId] NTEXT          NULL
);


GO
PRINT N'Creating [dbo].[ReceiptDetails]...';


GO
CREATE TABLE [dbo].[ReceiptDetails] (
    [Id]                   INT             IDENTITY (1, 1) NOT NULL,
    [CreationTime]         DATETIME2 (7)   NOT NULL,
    [CreatorUserId]        BIGINT          NULL,
    [LastModificationTime] DATETIME2 (7)   NULL,
    [LastModifierUserId]   BIGINT          NULL,
    [IsDeleted]            BIT             NOT NULL,
    [DeleterUserId]        BIGINT          NULL,
    [DeletionTime]         DATETIME2 (7)   NULL,
    [BillingNumber]        NVARCHAR (256)  NULL,
    [BillDateFrom]         DATETIME2 (7)   NOT NULL,
    [BillDateTo]           DATETIME2 (7)   NOT NULL,
    [ServiceName]          NVARCHAR (1024) NOT NULL,
    [BillAmount]           DECIMAL (18, 2) NULL,
    [OpenAmount]           DECIMAL (18, 2) NULL,
    [CurrencyName]         NVARCHAR (256)  NOT NULL,
    [AccountBillingId]     INT             NULL,
    [ReceiptId]            INT             NOT NULL,
    CONSTRAINT [PK_ReceiptDetails] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[ReceiptDetails].[IX_ReceiptDetails_ReceiptId]...';


GO
CREATE NONCLUSTERED INDEX [IX_ReceiptDetails_ReceiptId]
    ON [dbo].[ReceiptDetails]([ReceiptId] ASC);


GO
PRINT N'Creating [dbo].[ReceiptDetails].[IX_ReceiptDetails_AccountBillingId]...';


GO
CREATE NONCLUSTERED INDEX [IX_ReceiptDetails_AccountBillingId]
    ON [dbo].[ReceiptDetails]([AccountBillingId] ASC);


GO
PRINT N'Creating [dbo].[Receipts]...';


GO
CREATE TABLE [dbo].[Receipts] (
    [Id]                     INT            IDENTITY (1, 1) NOT NULL,
    [CreationTime]           DATETIME2 (7)  NOT NULL,
    [CreatorUserId]          BIGINT         NULL,
    [LastModificationTime]   DATETIME2 (7)  NULL,
    [LastModifierUserId]     BIGINT         NULL,
    [IsDeleted]              BIT            NOT NULL,
    [DeleterUserId]          BIGINT         NULL,
    [DeletionTime]           DATETIME2 (7)  NULL,
    [TenantId]               INT            NULL,
    [ReceiptNumber]          NVARCHAR (256) NOT NULL,
    [ReceiptDate]            DATETIME2 (7)  NOT NULL,
    [PaymentReferenceNumber] NVARCHAR (10)  NULL,
    [BankId]                 INT            NULL,
    [PaymentMethodId]        INT            NOT NULL,
    CONSTRAINT [PK_Receipts] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Receipts].[IX_Receipts_TenantId]...';


GO
CREATE NONCLUSTERED INDEX [IX_Receipts_TenantId]
    ON [dbo].[Receipts]([TenantId] ASC);


GO
PRINT N'Creating [dbo].[Receipts].[IX_Receipts_PaymentMethodId]...';


GO
CREATE NONCLUSTERED INDEX [IX_Receipts_PaymentMethodId]
    ON [dbo].[Receipts]([PaymentMethodId] ASC);


GO
PRINT N'Creating [dbo].[Receipts].[IX_Receipts_BankId]...';


GO
CREATE NONCLUSTERED INDEX [IX_Receipts_BankId]
    ON [dbo].[Receipts]([BankId] ASC);


GO
PRINT N'Creating [dbo].[ServiceFrquencies]...';


GO
CREATE TABLE [dbo].[ServiceFrquencies] (
    [Id]                   INT             IDENTITY (1, 1) NOT NULL,
    [ServiceFrequencyName] NVARCHAR (1024) NOT NULL,
    [IsEnabled]            BIT             NOT NULL,
    [CreationDate]         DATETIME2 (7)   NOT NULL,
    [TotalNumberOfDays]    INT             NULL,
    CONSTRAINT [PK_ServiceFrquencies] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[ServiceStatuses]...';


GO
CREATE TABLE [dbo].[ServiceStatuses] (
    [Id]                INT             IDENTITY (1, 1) NOT NULL,
    [ServiceStatusName] NVARCHAR (1024) NOT NULL,
    [IsEnabled]         BIT             NOT NULL,
    [CreationDate]      DATETIME2 (7)   NOT NULL,
    CONSTRAINT [PK_ServiceStatuses] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[ServiceTypes]...';


GO
CREATE TABLE [dbo].[ServiceTypes] (
    [Id]              INT             IDENTITY (1, 1) NOT NULL,
    [ServicetypeName] NVARCHAR (1024) NOT NULL,
    [IsEnabled]       BIT             NOT NULL,
    [CreationDate]    DATETIME2 (7)   NOT NULL,
    CONSTRAINT [PK_ServiceTypes] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[TemplateMessagePurposes]...';


GO
CREATE TABLE [dbo].[TemplateMessagePurposes] (
    [Id]      INT             IDENTITY (1, 1) NOT NULL,
    [Purpose] NVARCHAR (1024) NOT NULL,
    CONSTRAINT [PK_TemplateMessagePurposes] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[TemplateMessages]...';


GO
CREATE TABLE [dbo].[TemplateMessages] (
    [Id]                       INT              IDENTITY (1, 1) NOT NULL,
    [TenantId]                 INT              NULL,
    [TemplateMessageName]      NVARCHAR (256)   NOT NULL,
    [TemplateMessagePurposeId] INT              NOT NULL,
    [MessageCreationDate]      DATETIME2 (7)    NOT NULL,
    [MessageText]              NVARCHAR (1024)  NOT NULL,
    [AttachmentId]             UNIQUEIDENTIFIER NOT NULL,
    CONSTRAINT [PK_TemplateMessages] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[TemplateMessages].[IX_TemplateMessages_TenantId]...';


GO
CREATE NONCLUSTERED INDEX [IX_TemplateMessages_TenantId]
    ON [dbo].[TemplateMessages]([TenantId] ASC);


GO
PRINT N'Creating [dbo].[TemplateMessages].[IX_TemplateMessages_TemplateMessagePurposeId]...';


GO
CREATE NONCLUSTERED INDEX [IX_TemplateMessages_TemplateMessagePurposeId]
    ON [dbo].[TemplateMessages]([TemplateMessagePurposeId] ASC);


GO
PRINT N'Creating [dbo].[TenantInformations]...';


GO
CREATE TABLE [dbo].[TenantInformations] (
    [Id]                   INT           IDENTITY (1, 1) NOT NULL,
    [CreationTime]         DATETIME2 (7) NOT NULL,
    [CreatorUserId]        BIGINT        NULL,
    [LastModificationTime] DATETIME2 (7) NULL,
    [LastModifierUserId]   BIGINT        NULL,
    [IsDeleted]            BIT           NOT NULL,
    [DeleterUserId]        BIGINT        NULL,
    [DeletionTime]         DATETIME2 (7) NULL,
    [TenantId]             INT           NULL,
    [StartDate]            DATETIME2 (7) NOT NULL,
    [EndDate]              DATETIME2 (7) NOT NULL,
    CONSTRAINT [PK_TenantInformations] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[TenantInformations].[IX_TenantInformations_TenantId]...';


GO
CREATE NONCLUSTERED INDEX [IX_TenantInformations_TenantId]
    ON [dbo].[TenantInformations]([TenantId] ASC);


GO
PRINT N'Creating [dbo].[TenantServices]...';


GO
CREATE TABLE [dbo].[TenantServices] (
    [Id]                   INT             IDENTITY (1, 1) NOT NULL,
    [CreationTime]         DATETIME2 (7)   NOT NULL,
    [CreatorUserId]        BIGINT          NULL,
    [LastModificationTime] DATETIME2 (7)   NULL,
    [LastModifierUserId]   BIGINT          NULL,
    [IsDeleted]            BIT             NOT NULL,
    [DeleterUserId]        BIGINT          NULL,
    [DeletionTime]         DATETIME2 (7)   NULL,
    [TenantId]             INT             NULL,
    [ServiceFees]          DECIMAL (18, 2) NOT NULL,
    [InfoSeedServiceId]    INT             NULL,
    CONSTRAINT [PK_TenantServices] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[TenantServices].[IX_TenantServices_TenantId]...';


GO
CREATE NONCLUSTERED INDEX [IX_TenantServices_TenantId]
    ON [dbo].[TenantServices]([TenantId] ASC);


GO
PRINT N'Creating [dbo].[TenantServices].[IX_TenantServices_InfoSeedServiceId]...';


GO
CREATE NONCLUSTERED INDEX [IX_TenantServices_InfoSeedServiceId]
    ON [dbo].[TenantServices]([InfoSeedServiceId] ASC);


GO
PRINT N'Creating [dbo].[TextResource]...';


GO
CREATE TABLE [dbo].[TextResource] (
    [Id]                   INT            IDENTITY (1, 1) NOT NULL,
    [CreationTime]         DATETIME2 (7)  NOT NULL,
    [CreatorUserId]        BIGINT         NULL,
    [LastModificationTime] DATETIME2 (7)  NULL,
    [LastModifierUserId]   BIGINT         NULL,
    [IsDeleted]            BIT            NOT NULL,
    [DeleterUserId]        BIGINT         NULL,
    [DeletionTime]         DATETIME2 (7)  NULL,
    [TenantId]             INT            NULL,
    [Key]                  NVARCHAR (MAX) NULL,
    [Category]             NVARCHAR (MAX) NULL,
    CONSTRAINT [PK_TextResource] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating unnamed constraint on [dbo].[AbpEditions]...';


GO
ALTER TABLE [dbo].[AbpEditions]
    ADD DEFAULT (N'') FOR [Discriminator];


GO
PRINT N'Creating unnamed constraint on [dbo].[AbpLanguages]...';


GO
ALTER TABLE [dbo].[AbpLanguages]
    ADD DEFAULT (CONVERT([bit],(0))) FOR [IsDisabled];


GO
PRINT N'Creating unnamed constraint on [dbo].[AbpTenants]...';


GO
ALTER TABLE [dbo].[AbpTenants]
    ADD DEFAULT (CONVERT([bit],(0))) FOR [IsInTrialPeriod];


GO
PRINT N'Creating unnamed constraint on [dbo].[AbpTenants]...';


GO
ALTER TABLE [dbo].[AbpTenants]
    ADD DEFAULT ((0)) FOR [SubscriptionPaymentType];


GO
PRINT N'Creating unnamed constraint on [dbo].[AbpTenants]...';


GO
ALTER TABLE [dbo].[AbpTenants]
    ADD DEFAULT ((0)) FOR [CustomerID];


GO
PRINT N'Creating unnamed constraint on [dbo].[AbpTenants]...';


GO
ALTER TABLE [dbo].[AbpTenants]
    ADD DEFAULT ((0)) FOR [CustomerStatusID];


GO
PRINT N'Creating unnamed constraint on [dbo].[AbpTenants]...';


GO
ALTER TABLE [dbo].[AbpTenants]
    ADD DEFAULT (CONVERT([bit],(0))) FOR [IsBotActive];


GO
PRINT N'Creating unnamed constraint on [dbo].[AbpUserOrganizationUnits]...';


GO
ALTER TABLE [dbo].[AbpUserOrganizationUnits]
    ADD DEFAULT (CONVERT([bit],(0))) FOR [IsDeleted];


GO
PRINT N'Creating [dbo].[DF_ActiveContactPerMonth_ActiveContactCount]...';


GO
ALTER TABLE [dbo].[ActiveContactPerMonth]
    ADD CONSTRAINT [DF_ActiveContactPerMonth_ActiveContactCount] DEFAULT ((0)) FOR [LastMessageDateTime];


GO
PRINT N'Creating unnamed constraint on [dbo].[AppChatMessages]...';


GO
ALTER TABLE [dbo].[AppChatMessages]
    ADD DEFAULT ((0)) FOR [ReceiverReadState];


GO
PRINT N'Creating unnamed constraint on [dbo].[AppSubscriptionPayments]...';


GO
ALTER TABLE [dbo].[AppSubscriptionPayments]
    ADD DEFAULT (CONVERT([bit],(0))) FOR [IsRecurring];


GO
PRINT N'Creating unnamed constraint on [dbo].[AppSubscriptionPayments]...';


GO
ALTER TABLE [dbo].[AppSubscriptionPayments]
    ADD DEFAULT ((0)) FOR [EditionPaymentType];


GO
PRINT N'Creating unnamed constraint on [dbo].[Billings]...';


GO
ALTER TABLE [dbo].[Billings]
    ADD DEFAULT (CONVERT([bit],(0))) FOR [IsPayed];


GO
PRINT N'Creating unnamed constraint on [dbo].[Billings]...';


GO
ALTER TABLE [dbo].[Billings]
    ADD DEFAULT ((0)) FOR [TenantServiceId];


GO
PRINT N'Creating unnamed constraint on [dbo].[BranchAreas]...';


GO
ALTER TABLE [dbo].[BranchAreas]
    ADD DEFAULT (CONVERT([bigint],(0))) FOR [BranchId];


GO
PRINT N'Creating unnamed constraint on [dbo].[Branches]...';


GO
ALTER TABLE [dbo].[Branches]
    ADD DEFAULT ((0)) FOR [BranchAreaId];


GO
PRINT N'Creating unnamed constraint on [dbo].[Contacts]...';


GO
ALTER TABLE [dbo].[Contacts]
    ADD DEFAULT ('0001-01-01T00:00:00.0000000') FOR [CreationTime];


GO
PRINT N'Creating unnamed constraint on [dbo].[Contacts]...';


GO
ALTER TABLE [dbo].[Contacts]
    ADD DEFAULT (CONVERT([bit],(0))) FOR [IsDeleted];


GO
PRINT N'Creating unnamed constraint on [dbo].[Contacts]...';


GO
ALTER TABLE [dbo].[Contacts]
    ADD DEFAULT (CONVERT([bit],(0))) FOR [IsConversationExpired];


GO
PRINT N'Creating unnamed constraint on [dbo].[Contacts]...';


GO
ALTER TABLE [dbo].[Contacts]
    ADD DEFAULT (CONVERT([bit],(0))) FOR [IsBlock];


GO
PRINT N'Creating unnamed constraint on [dbo].[InfoSeedServices]...';


GO
ALTER TABLE [dbo].[InfoSeedServices]
    ADD DEFAULT (CONVERT([bit],(0))) FOR [IsFeesPerTransaction];


GO
PRINT N'Creating [dbo].[DF__ItemCateg__IsDel__408F9238]...';


GO
ALTER TABLE [dbo].[ItemCategorys]
    ADD CONSTRAINT [DF__ItemCateg__IsDel__408F9238] DEFAULT (CONVERT([bit],(0))) FOR [IsDeleted];


GO
PRINT N'Creating [dbo].[DF__Items__Priority__4183B671]...';


GO
ALTER TABLE [dbo].[Items]
    ADD CONSTRAINT [DF__Items__Priority__4183B671] DEFAULT ((0)) FOR [Priority];


GO
PRINT N'Creating [dbo].[DF_LocationDeliveryCost_DeliveryCost]...';


GO
ALTER TABLE [dbo].[LocationDeliveryCost]
    ADD CONSTRAINT [DF_LocationDeliveryCost_DeliveryCost] DEFAULT ((0)) FOR [DeliveryCost];


GO
PRINT N'Creating [dbo].[DF__Menus__Priority__79FD19BE]...';


GO
ALTER TABLE [dbo].[Menus]
    ADD CONSTRAINT [DF__Menus__Priority__79FD19BE] DEFAULT ((0)) FOR [Priority];


GO
PRINT N'Creating unnamed constraint on [dbo].[Orders]...';


GO
ALTER TABLE [dbo].[Orders]
    ADD DEFAULT (CONVERT([bigint],(0))) FOR [AgentId];


GO
PRINT N'Creating unnamed constraint on [dbo].[Orders]...';


GO
ALTER TABLE [dbo].[Orders]
    ADD DEFAULT (CONVERT([bit],(0))) FOR [IsLockByAgent];


GO
PRINT N'Creating unnamed constraint on [dbo].[Orders]...';


GO
ALTER TABLE [dbo].[Orders]
    ADD DEFAULT ((0)) FOR [OrderStatus];


GO
PRINT N'Creating unnamed constraint on [dbo].[Orders]...';


GO
ALTER TABLE [dbo].[Orders]
    ADD DEFAULT ((0)) FOR [OrderType];


GO
PRINT N'Creating unnamed constraint on [dbo].[Orders]...';


GO
ALTER TABLE [dbo].[Orders]
    ADD DEFAULT (CONVERT([bit],(0))) FOR [IsEvaluation];


GO
PRINT N'Creating unnamed constraint on [dbo].[Orders]...';


GO
ALTER TABLE [dbo].[Orders]
    ADD DEFAULT (CONVERT([bit],(0))) FOR [IsBranchArea];


GO
PRINT N'Creating unnamed constraint on [dbo].[Orders]...';


GO
ALTER TABLE [dbo].[Orders]
    ADD DEFAULT ((0)) FOR [BranchAreaId];


GO
PRINT N'Creating unnamed constraint on [dbo].[ReceiptDetails]...';


GO
ALTER TABLE [dbo].[ReceiptDetails]
    ADD DEFAULT ((0)) FOR [ReceiptId];


GO
PRINT N'Creating unnamed constraint on [dbo].[TemplateMessages]...';


GO
ALTER TABLE [dbo].[TemplateMessages]
    ADD DEFAULT ('0001-01-01T00:00:00.0000000') FOR [MessageCreationDate];


GO
PRINT N'Creating unnamed constraint on [dbo].[TemplateMessages]...';


GO
ALTER TABLE [dbo].[TemplateMessages]
    ADD DEFAULT (N'') FOR [MessageText];


GO
PRINT N'Creating unnamed constraint on [dbo].[TemplateMessages]...';


GO
ALTER TABLE [dbo].[TemplateMessages]
    ADD DEFAULT ('00000000-0000-0000-0000-000000000000') FOR [AttachmentId];


GO
PRINT N'Creating [HangFire].[FK_HangFire_JobParameter_Job]...';


GO
ALTER TABLE [HangFire].[JobParameter]
    ADD CONSTRAINT [FK_HangFire_JobParameter_Job] FOREIGN KEY ([JobId]) REFERENCES [HangFire].[Job] ([Id]) ON DELETE CASCADE ON UPDATE CASCADE;


GO
PRINT N'Creating [HangFire].[FK_HangFire_State_Job]...';


GO
ALTER TABLE [HangFire].[State]
    ADD CONSTRAINT [FK_HangFire_State_Job] FOREIGN KEY ([JobId]) REFERENCES [HangFire].[Job] ([Id]) ON DELETE CASCADE ON UPDATE CASCADE;


GO
PRINT N'Creating [dbo].[FK_AbpDynamicEntityProperties_AbpDynamicProperties_DynamicPropertyId]...';


GO
ALTER TABLE [dbo].[AbpDynamicEntityProperties]
    ADD CONSTRAINT [FK_AbpDynamicEntityProperties_AbpDynamicProperties_DynamicPropertyId] FOREIGN KEY ([DynamicPropertyId]) REFERENCES [dbo].[AbpDynamicProperties] ([Id]) ON DELETE CASCADE;


GO
PRINT N'Creating [dbo].[FK_AbpDynamicEntityPropertyValues_AbpDynamicEntityProperties_DynamicEntityPropertyId]...';


GO
ALTER TABLE [dbo].[AbpDynamicEntityPropertyValues]
    ADD CONSTRAINT [FK_AbpDynamicEntityPropertyValues_AbpDynamicEntityProperties_DynamicEntityPropertyId] FOREIGN KEY ([DynamicEntityPropertyId]) REFERENCES [dbo].[AbpDynamicEntityProperties] ([Id]) ON DELETE CASCADE;


GO
PRINT N'Creating [dbo].[FK_AbpDynamicPropertyValues_AbpDynamicProperties_DynamicPropertyId]...';


GO
ALTER TABLE [dbo].[AbpDynamicPropertyValues]
    ADD CONSTRAINT [FK_AbpDynamicPropertyValues_AbpDynamicProperties_DynamicPropertyId] FOREIGN KEY ([DynamicPropertyId]) REFERENCES [dbo].[AbpDynamicProperties] ([Id]) ON DELETE CASCADE;


GO
PRINT N'Creating [dbo].[FK_AbpEntityChanges_AbpEntityChangeSets_EntityChangeSetId]...';


GO
ALTER TABLE [dbo].[AbpEntityChanges]
    ADD CONSTRAINT [FK_AbpEntityChanges_AbpEntityChangeSets_EntityChangeSetId] FOREIGN KEY ([EntityChangeSetId]) REFERENCES [dbo].[AbpEntityChangeSets] ([Id]) ON DELETE CASCADE;


GO
PRINT N'Creating [dbo].[FK_AbpEntityPropertyChanges_AbpEntityChanges_EntityChangeId]...';


GO
ALTER TABLE [dbo].[AbpEntityPropertyChanges]
    ADD CONSTRAINT [FK_AbpEntityPropertyChanges_AbpEntityChanges_EntityChangeId] FOREIGN KEY ([EntityChangeId]) REFERENCES [dbo].[AbpEntityChanges] ([Id]) ON DELETE CASCADE;


GO
PRINT N'Creating [dbo].[FK_AbpFeatures_AbpEditions_EditionId]...';


GO
ALTER TABLE [dbo].[AbpFeatures]
    ADD CONSTRAINT [FK_AbpFeatures_AbpEditions_EditionId] FOREIGN KEY ([EditionId]) REFERENCES [dbo].[AbpEditions] ([Id]) ON DELETE CASCADE;


GO
PRINT N'Creating [dbo].[FK_AbpOrganizationUnits_AbpOrganizationUnits_ParentId]...';


GO
ALTER TABLE [dbo].[AbpOrganizationUnits]
    ADD CONSTRAINT [FK_AbpOrganizationUnits_AbpOrganizationUnits_ParentId] FOREIGN KEY ([ParentId]) REFERENCES [dbo].[AbpOrganizationUnits] ([Id]);


GO
PRINT N'Creating [dbo].[FK_AbpPermissions_AbpRoles_RoleId]...';


GO
ALTER TABLE [dbo].[AbpPermissions]
    ADD CONSTRAINT [FK_AbpPermissions_AbpRoles_RoleId] FOREIGN KEY ([RoleId]) REFERENCES [dbo].[AbpRoles] ([Id]) ON DELETE CASCADE;


GO
PRINT N'Creating [dbo].[FK_AbpPermissions_AbpUsers_UserId]...';


GO
ALTER TABLE [dbo].[AbpPermissions]
    ADD CONSTRAINT [FK_AbpPermissions_AbpUsers_UserId] FOREIGN KEY ([UserId]) REFERENCES [dbo].[AbpUsers] ([Id]) ON DELETE CASCADE;


GO
PRINT N'Creating [dbo].[FK_AbpRoleClaims_AbpRoles_RoleId]...';


GO
ALTER TABLE [dbo].[AbpRoleClaims]
    ADD CONSTRAINT [FK_AbpRoleClaims_AbpRoles_RoleId] FOREIGN KEY ([RoleId]) REFERENCES [dbo].[AbpRoles] ([Id]) ON DELETE CASCADE;


GO
PRINT N'Creating [dbo].[FK_AbpRoles_AbpUsers_CreatorUserId]...';


GO
ALTER TABLE [dbo].[AbpRoles]
    ADD CONSTRAINT [FK_AbpRoles_AbpUsers_CreatorUserId] FOREIGN KEY ([CreatorUserId]) REFERENCES [dbo].[AbpUsers] ([Id]);


GO
PRINT N'Creating [dbo].[FK_AbpRoles_AbpUsers_DeleterUserId]...';


GO
ALTER TABLE [dbo].[AbpRoles]
    ADD CONSTRAINT [FK_AbpRoles_AbpUsers_DeleterUserId] FOREIGN KEY ([DeleterUserId]) REFERENCES [dbo].[AbpUsers] ([Id]);


GO
PRINT N'Creating [dbo].[FK_AbpRoles_AbpUsers_LastModifierUserId]...';


GO
ALTER TABLE [dbo].[AbpRoles]
    ADD CONSTRAINT [FK_AbpRoles_AbpUsers_LastModifierUserId] FOREIGN KEY ([LastModifierUserId]) REFERENCES [dbo].[AbpUsers] ([Id]);


GO
PRINT N'Creating [dbo].[FK_AbpSettings_AbpUsers_UserId]...';


GO
ALTER TABLE [dbo].[AbpSettings]
    ADD CONSTRAINT [FK_AbpSettings_AbpUsers_UserId] FOREIGN KEY ([UserId]) REFERENCES [dbo].[AbpUsers] ([Id]);


GO
PRINT N'Creating [dbo].[FK_AbpTenants_AbpEditions_EditionId]...';


GO
ALTER TABLE [dbo].[AbpTenants]
    ADD CONSTRAINT [FK_AbpTenants_AbpEditions_EditionId] FOREIGN KEY ([EditionId]) REFERENCES [dbo].[AbpEditions] ([Id]);


GO
PRINT N'Creating [dbo].[FK_AbpTenants_AbpUsers_CreatorUserId]...';


GO
ALTER TABLE [dbo].[AbpTenants]
    ADD CONSTRAINT [FK_AbpTenants_AbpUsers_CreatorUserId] FOREIGN KEY ([CreatorUserId]) REFERENCES [dbo].[AbpUsers] ([Id]);


GO
PRINT N'Creating [dbo].[FK_AbpTenants_AbpUsers_DeleterUserId]...';


GO
ALTER TABLE [dbo].[AbpTenants]
    ADD CONSTRAINT [FK_AbpTenants_AbpUsers_DeleterUserId] FOREIGN KEY ([DeleterUserId]) REFERENCES [dbo].[AbpUsers] ([Id]);


GO
PRINT N'Creating [dbo].[FK_AbpTenants_AbpUsers_LastModifierUserId]...';


GO
ALTER TABLE [dbo].[AbpTenants]
    ADD CONSTRAINT [FK_AbpTenants_AbpUsers_LastModifierUserId] FOREIGN KEY ([LastModifierUserId]) REFERENCES [dbo].[AbpUsers] ([Id]);


GO
PRINT N'Creating [dbo].[FK_AbpUserClaims_AbpUsers_UserId]...';


GO
ALTER TABLE [dbo].[AbpUserClaims]
    ADD CONSTRAINT [FK_AbpUserClaims_AbpUsers_UserId] FOREIGN KEY ([UserId]) REFERENCES [dbo].[AbpUsers] ([Id]) ON DELETE CASCADE;


GO
PRINT N'Creating [dbo].[FK_AbpUserLogins_AbpUsers_UserId]...';


GO
ALTER TABLE [dbo].[AbpUserLogins]
    ADD CONSTRAINT [FK_AbpUserLogins_AbpUsers_UserId] FOREIGN KEY ([UserId]) REFERENCES [dbo].[AbpUsers] ([Id]) ON DELETE CASCADE;


GO
PRINT N'Creating [dbo].[FK_AbpUserOrganizationUnits_AbpUsers_UserId]...';


GO
ALTER TABLE [dbo].[AbpUserOrganizationUnits]
    ADD CONSTRAINT [FK_AbpUserOrganizationUnits_AbpUsers_UserId] FOREIGN KEY ([UserId]) REFERENCES [dbo].[AbpUsers] ([Id]) ON DELETE CASCADE;


GO
PRINT N'Creating [dbo].[FK_AbpUserRoles_AbpUsers_UserId]...';


GO
ALTER TABLE [dbo].[AbpUserRoles]
    ADD CONSTRAINT [FK_AbpUserRoles_AbpUsers_UserId] FOREIGN KEY ([UserId]) REFERENCES [dbo].[AbpUsers] ([Id]) ON DELETE CASCADE;


GO
PRINT N'Creating [dbo].[FK_AbpUsers_AbpUsers_CreatorUserId]...';


GO
ALTER TABLE [dbo].[AbpUsers]
    ADD CONSTRAINT [FK_AbpUsers_AbpUsers_CreatorUserId] FOREIGN KEY ([CreatorUserId]) REFERENCES [dbo].[AbpUsers] ([Id]);


GO
PRINT N'Creating [dbo].[FK_AbpUsers_AbpUsers_DeleterUserId]...';


GO
ALTER TABLE [dbo].[AbpUsers]
    ADD CONSTRAINT [FK_AbpUsers_AbpUsers_DeleterUserId] FOREIGN KEY ([DeleterUserId]) REFERENCES [dbo].[AbpUsers] ([Id]);


GO
PRINT N'Creating [dbo].[FK_AbpUsers_AbpUsers_LastModifierUserId]...';


GO
ALTER TABLE [dbo].[AbpUsers]
    ADD CONSTRAINT [FK_AbpUsers_AbpUsers_LastModifierUserId] FOREIGN KEY ([LastModifierUserId]) REFERENCES [dbo].[AbpUsers] ([Id]);


GO
PRINT N'Creating [dbo].[FK_AbpUserTokens_AbpUsers_UserId]...';


GO
ALTER TABLE [dbo].[AbpUserTokens]
    ADD CONSTRAINT [FK_AbpUserTokens_AbpUsers_UserId] FOREIGN KEY ([UserId]) REFERENCES [dbo].[AbpUsers] ([Id]) ON DELETE CASCADE;


GO
PRINT N'Creating [dbo].[FK_AbpWebhookSendAttempts_AbpWebhookEvents_WebhookEventId]...';


GO
ALTER TABLE [dbo].[AbpWebhookSendAttempts]
    ADD CONSTRAINT [FK_AbpWebhookSendAttempts_AbpWebhookEvents_WebhookEventId] FOREIGN KEY ([WebhookEventId]) REFERENCES [dbo].[AbpWebhookEvents] ([Id]) ON DELETE CASCADE;


GO
PRINT N'Creating [dbo].[FK_AccountBillings_Billings_BillingId]...';


GO
ALTER TABLE [dbo].[AccountBillings]
    ADD CONSTRAINT [FK_AccountBillings_Billings_BillingId] FOREIGN KEY ([BillingId]) REFERENCES [dbo].[Billings] ([Id]);


GO
PRINT N'Creating [dbo].[FK_AccountBillings_Currencies_CurrencyId]...';


GO
ALTER TABLE [dbo].[AccountBillings]
    ADD CONSTRAINT [FK_AccountBillings_Currencies_CurrencyId] FOREIGN KEY ([CurrencyId]) REFERENCES [dbo].[Currencies] ([Id]);


GO
PRINT N'Creating [dbo].[FK_AccountBillings_InfoSeedServices_InfoSeedServiceId]...';


GO
ALTER TABLE [dbo].[AccountBillings]
    ADD CONSTRAINT [FK_AccountBillings_InfoSeedServices_InfoSeedServiceId] FOREIGN KEY ([InfoSeedServiceId]) REFERENCES [dbo].[InfoSeedServices] ([Id]);


GO
PRINT N'Creating [dbo].[FK_AccountBillings_ServiceTypes_ServiceTypeId]...';


GO
ALTER TABLE [dbo].[AccountBillings]
    ADD CONSTRAINT [FK_AccountBillings_ServiceTypes_ServiceTypeId] FOREIGN KEY ([ServiceTypeId]) REFERENCES [dbo].[ServiceTypes] ([Id]);


GO
PRINT N'Creating [dbo].[FK_AppSubscriptionPayments_AbpEditions_EditionId]...';


GO
ALTER TABLE [dbo].[AppSubscriptionPayments]
    ADD CONSTRAINT [FK_AppSubscriptionPayments_AbpEditions_EditionId] FOREIGN KEY ([EditionId]) REFERENCES [dbo].[AbpEditions] ([Id]) ON DELETE CASCADE;


GO
PRINT N'Creating [dbo].[FK_Billings_Currencies_CurrencyId]...';


GO
ALTER TABLE [dbo].[Billings]
    ADD CONSTRAINT [FK_Billings_Currencies_CurrencyId] FOREIGN KEY ([CurrencyId]) REFERENCES [dbo].[Currencies] ([Id]) ON DELETE CASCADE;


GO
PRINT N'Creating [dbo].[FK_Billings_TenantServices_TenantServiceId]...';


GO
ALTER TABLE [dbo].[Billings]
    ADD CONSTRAINT [FK_Billings_TenantServices_TenantServiceId] FOREIGN KEY ([TenantServiceId]) REFERENCES [dbo].[TenantServices] ([Id]) ON DELETE CASCADE;


GO
PRINT N'Creating [dbo].[FK_BranchAreas_Areas_AreaId]...';


GO
ALTER TABLE [dbo].[BranchAreas]
    ADD CONSTRAINT [FK_BranchAreas_Areas_AreaId] FOREIGN KEY ([AreaId]) REFERENCES [dbo].[Areas] ([Id]) ON DELETE CASCADE;


GO
PRINT N'Creating [dbo].[FK_BranchAreas_Branches_BranchId]...';


GO
ALTER TABLE [dbo].[BranchAreas]
    ADD CONSTRAINT [FK_BranchAreas_Branches_BranchId] FOREIGN KEY ([BranchId]) REFERENCES [dbo].[Branches] ([Id]) ON DELETE CASCADE;


GO
PRINT N'Creating [dbo].[FK_Caption_LanguageBot_LanguageBotId]...';


GO
ALTER TABLE [dbo].[Caption]
    ADD CONSTRAINT [FK_Caption_LanguageBot_LanguageBotId] FOREIGN KEY ([LanguageBotId]) REFERENCES [dbo].[LanguageBot] ([Id]) ON DELETE CASCADE;


GO
PRINT N'Creating [dbo].[FK_Caption_TextResource_TextResourceId]...';


GO
ALTER TABLE [dbo].[Caption]
    ADD CONSTRAINT [FK_Caption_TextResource_TextResourceId] FOREIGN KEY ([TextResourceId]) REFERENCES [dbo].[TextResource] ([Id]) ON DELETE CASCADE;


GO
PRINT N'Creating [dbo].[FK_Contacts_ChatStatuses_ChatStatuseId]...';


GO
ALTER TABLE [dbo].[Contacts]
    ADD CONSTRAINT [FK_Contacts_ChatStatuses_ChatStatuseId] FOREIGN KEY ([ChatStatuseId]) REFERENCES [dbo].[ChatStatuses] ([Id]);


GO
PRINT N'Creating [dbo].[FK_Contacts_ContactStatuses_ContactStatuseId]...';


GO
ALTER TABLE [dbo].[Contacts]
    ADD CONSTRAINT [FK_Contacts_ContactStatuses_ContactStatuseId] FOREIGN KEY ([ContactStatuseId]) REFERENCES [dbo].[ContactStatuses] ([Id]);


GO
PRINT N'Creating [dbo].[FK_Customers_Cities_CityId]...';


GO
ALTER TABLE [dbo].[Customers]
    ADD CONSTRAINT [FK_Customers_Cities_CityId] FOREIGN KEY ([CityId]) REFERENCES [dbo].[Cities] ([Id]);


GO
PRINT N'Creating [dbo].[FK_Customers_Genders_GenderId]...';


GO
ALTER TABLE [dbo].[Customers]
    ADD CONSTRAINT [FK_Customers_Genders_GenderId] FOREIGN KEY ([GenderId]) REFERENCES [dbo].[Genders] ([Id]);


GO
PRINT N'Creating [dbo].[FK_DeliveryChanges_Areas_AreaId]...';


GO
ALTER TABLE [dbo].[DeliveryChanges]
    ADD CONSTRAINT [FK_DeliveryChanges_Areas_AreaId] FOREIGN KEY ([AreaId]) REFERENCES [dbo].[Areas] ([Id]) ON DELETE CASCADE;


GO
PRINT N'Creating [dbo].[FK_ExtraOrderDetail_OrderDetails_OrderDetailId]...';


GO
ALTER TABLE [dbo].[ExtraOrderDetail]
    ADD CONSTRAINT [FK_ExtraOrderDetail_OrderDetails_OrderDetailId] FOREIGN KEY ([OrderDetailId]) REFERENCES [dbo].[OrderDetails] ([Id]);


GO
PRINT N'Creating [dbo].[FK_InfoSeedServices_ServiceFrquencies_ServiceFrquencyId]...';


GO
ALTER TABLE [dbo].[InfoSeedServices]
    ADD CONSTRAINT [FK_InfoSeedServices_ServiceFrquencies_ServiceFrquencyId] FOREIGN KEY ([ServiceFrquencyId]) REFERENCES [dbo].[ServiceFrquencies] ([Id]) ON DELETE CASCADE;


GO
PRINT N'Creating [dbo].[FK_InfoSeedServices_ServiceStatuses_ServiceStatusId]...';


GO
ALTER TABLE [dbo].[InfoSeedServices]
    ADD CONSTRAINT [FK_InfoSeedServices_ServiceStatuses_ServiceStatusId] FOREIGN KEY ([ServiceStatusId]) REFERENCES [dbo].[ServiceStatuses] ([Id]) ON DELETE CASCADE;


GO
PRINT N'Creating [dbo].[FK_InfoSeedServices_ServiceTypes_ServiceTypeId]...';


GO
ALTER TABLE [dbo].[InfoSeedServices]
    ADD CONSTRAINT [FK_InfoSeedServices_ServiceTypes_ServiceTypeId] FOREIGN KEY ([ServiceTypeId]) REFERENCES [dbo].[ServiceTypes] ([Id]) ON DELETE CASCADE;


GO
PRINT N'Creating [dbo].[FK_ItemAdditions_Items_ItemId]...';


GO
ALTER TABLE [dbo].[ItemAdditions]
    ADD CONSTRAINT [FK_ItemAdditions_Items_ItemId] FOREIGN KEY ([ItemId]) REFERENCES [dbo].[Items] ([Id]);


GO
PRINT N'Creating [dbo].[FK_Items_Menus_MenuId]...';


GO
ALTER TABLE [dbo].[Items]
    ADD CONSTRAINT [FK_Items_Menus_MenuId] FOREIGN KEY ([MenuId]) REFERENCES [dbo].[Menus] ([Id]);


GO
PRINT N'Creating [dbo].[FK_LocationDeliveryCost_Locations]...';


GO
ALTER TABLE [dbo].[LocationDeliveryCost]
    ADD CONSTRAINT [FK_LocationDeliveryCost_Locations] FOREIGN KEY ([LocationId]) REFERENCES [dbo].[Locations] ([Id]);


GO
PRINT N'Creating [dbo].[FK_Locations_LocationLevels]...';


GO
ALTER TABLE [dbo].[Locations]
    ADD CONSTRAINT [FK_Locations_LocationLevels] FOREIGN KEY ([LevelId]) REFERENCES [dbo].[LocationLevels] ([Id]);


GO
PRINT N'Creating [dbo].[FK_Locations_Locations]...';


GO
ALTER TABLE [dbo].[Locations]
    ADD CONSTRAINT [FK_Locations_Locations] FOREIGN KEY ([ParentId]) REFERENCES [dbo].[Locations] ([Id]);


GO
PRINT N'Creating [dbo].[FK_OrderDetails_Items_ItemId]...';


GO
ALTER TABLE [dbo].[OrderDetails]
    ADD CONSTRAINT [FK_OrderDetails_Items_ItemId] FOREIGN KEY ([ItemId]) REFERENCES [dbo].[Items] ([Id]);


GO
PRINT N'Creating [dbo].[FK_OrderDetails_Orders_OrderId]...';


GO
ALTER TABLE [dbo].[OrderDetails]
    ADD CONSTRAINT [FK_OrderDetails_Orders_OrderId] FOREIGN KEY ([OrderId]) REFERENCES [dbo].[Orders] ([Id]);


GO
PRINT N'Creating [dbo].[FK_OrderLineAdditionalIngredients_Orders_OrderId]...';


GO
ALTER TABLE [dbo].[OrderLineAdditionalIngredients]
    ADD CONSTRAINT [FK_OrderLineAdditionalIngredients_Orders_OrderId] FOREIGN KEY ([OrderId]) REFERENCES [dbo].[Orders] ([Id]);


GO
PRINT N'Creating [dbo].[FK_OrderReceipts_Orders_OrderId]...';


GO
ALTER TABLE [dbo].[OrderReceipts]
    ADD CONSTRAINT [FK_OrderReceipts_Orders_OrderId] FOREIGN KEY ([OrderId]) REFERENCES [dbo].[Orders] ([Id]);


GO
PRINT N'Creating [dbo].[FK_Orders_Areas_AreaId]...';


GO
ALTER TABLE [dbo].[Orders]
    ADD CONSTRAINT [FK_Orders_Areas_AreaId] FOREIGN KEY ([AreaId]) REFERENCES [dbo].[Areas] ([Id]);


GO
PRINT N'Creating [dbo].[FK_Orders_Branches_BranchId]...';


GO
ALTER TABLE [dbo].[Orders]
    ADD CONSTRAINT [FK_Orders_Branches_BranchId] FOREIGN KEY ([BranchId]) REFERENCES [dbo].[Branches] ([Id]);


GO
PRINT N'Creating [dbo].[FK_Orders_Contacts_ContactId]...';


GO
ALTER TABLE [dbo].[Orders]
    ADD CONSTRAINT [FK_Orders_Contacts_ContactId] FOREIGN KEY ([ContactId]) REFERENCES [dbo].[Contacts] ([Id]);


GO
PRINT N'Creating [dbo].[FK_ReceiptDetails_AccountBillings_AccountBillingId]...';


GO
ALTER TABLE [dbo].[ReceiptDetails]
    ADD CONSTRAINT [FK_ReceiptDetails_AccountBillings_AccountBillingId] FOREIGN KEY ([AccountBillingId]) REFERENCES [dbo].[AccountBillings] ([Id]);


GO
PRINT N'Creating [dbo].[FK_ReceiptDetails_Receipts_ReceiptId]...';


GO
ALTER TABLE [dbo].[ReceiptDetails]
    ADD CONSTRAINT [FK_ReceiptDetails_Receipts_ReceiptId] FOREIGN KEY ([ReceiptId]) REFERENCES [dbo].[Receipts] ([Id]) ON DELETE CASCADE;


GO
PRINT N'Creating [dbo].[FK_Receipts_Banks_BankId]...';


GO
ALTER TABLE [dbo].[Receipts]
    ADD CONSTRAINT [FK_Receipts_Banks_BankId] FOREIGN KEY ([BankId]) REFERENCES [dbo].[Banks] ([Id]);


GO
PRINT N'Creating [dbo].[FK_Receipts_PaymentMethods_PaymentMethodId]...';


GO
ALTER TABLE [dbo].[Receipts]
    ADD CONSTRAINT [FK_Receipts_PaymentMethods_PaymentMethodId] FOREIGN KEY ([PaymentMethodId]) REFERENCES [dbo].[PaymentMethods] ([Id]) ON DELETE CASCADE;


GO
PRINT N'Creating [dbo].[FK_TemplateMessages_TemplateMessagePurposes_TemplateMessagePurposeId]...';


GO
ALTER TABLE [dbo].[TemplateMessages]
    ADD CONSTRAINT [FK_TemplateMessages_TemplateMessagePurposes_TemplateMessagePurposeId] FOREIGN KEY ([TemplateMessagePurposeId]) REFERENCES [dbo].[TemplateMessagePurposes] ([Id]) ON DELETE CASCADE;


GO
PRINT N'Creating [dbo].[FK_TenantServices_InfoSeedServices_InfoSeedServiceId]...';


GO
ALTER TABLE [dbo].[TenantServices]
    ADD CONSTRAINT [FK_TenantServices_InfoSeedServices_InfoSeedServiceId] FOREIGN KEY ([InfoSeedServiceId]) REFERENCES [dbo].[InfoSeedServices] ([Id]);


GO
PRINT N'Creating [dbo].[AccountBillingsGenerate]...';


GO
-- =============================================
-- Author:		<Mustafa Snaid>
-- Create date: <1-1-2012>
-- Description:	<Account Billings Generation>
-- =============================================
CREATE PROCEDURE [dbo].[AccountBillingsGenerate] 
	
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

--- Handing One Time Service Frequency 
INSERT INTO [dbo].[AccountBillings]
           ([CreationTime]
           ,[CreatorUserId]
           ,[LastModificationTime]
           ,[LastModifierUserId]
           ,[IsDeleted]
           ,[DeleterUserId]
           ,[DeletionTime]
           ,[TenantId]
           ,[BillID]
           ,[BillDateFrom]
           ,[BillDateTo]
           ,[OpenAmount]
           ,[BillAmount]
           ,[InfoSeedServiceId]
           ,[ServiceTypeId]
           ,[CurrencyId])
    
SELECT  
GETDATE()
,1
,NULL
,NULL
,0
,NULL
,NULL
, TenantServices.TenantId
,CAST(TenantServices.TenantId as varchar) +'-' + format(GETDATE(),'yyyyMMdd') 
,GETDATE()
,DATEADD(year, 10, GETDATE())
,TenantServices.ServiceFees
,TenantServices.ServiceFees
, TenantServices.InfoSeedServiceId
, InfoSeedServices.ServiceTypeId
,1
--, TenantServices.Id
--, TenantServices.ServiceId

--, TenantServices.ServiceFees
--, TenantServices.CreationTime
--, TenantServices.IsDeleted
--, InfoSeedServices.ServiceFrquencyId
--, InfoSeedServices.ServiceName
--, InfoSeedServices.ServiceTypeId
--, ServiceTypes.ServicetypeName
--, ServiceFrquencies.ServiceFrequencyName
FROM            TenantServices INNER JOIN
                         InfoSeedServices ON TenantServices.InfoSeedServiceId = InfoSeedServices.Id INNER JOIN
                         ServiceTypes ON InfoSeedServices.ServiceTypeId = ServiceTypes.Id INNER JOIN
                         ServiceFrquencies ON InfoSeedServices.ServiceFrquencyId = ServiceFrquencies.Id 
						 left JOIN   AccountBillings ON TenantServices.TenantId = AccountBillings.TenantId AND TenantServices.InfoSeedServiceId = AccountBillings.InfoSeedServiceId
WHERE        (TenantServices.IsDeleted = 0) AND (InfoSeedServices.ServiceFrquencyId = 1) 
and (AccountBillings.Id is null)


-- Handling monthly services
INSERT INTO [dbo].[AccountBillings]
           ([CreationTime]
           ,[CreatorUserId]
           ,[LastModificationTime]
           ,[LastModifierUserId]
           ,[IsDeleted]
           ,[DeleterUserId]
           ,[DeletionTime]
           ,[TenantId]
           ,[BillID]
           ,[BillDateFrom]
           ,[BillDateTo]
           ,[OpenAmount]
           ,[BillAmount]
           ,[InfoSeedServiceId]
           ,[ServiceTypeId]
           ,[CurrencyId])
SELECT  
GETDATE()
,1
,NULL
,NULL
,0
,NULL
,NULL
, TenantServices.TenantId
,CAST(TenantServices.TenantId as varchar) +'-' + format(GETDATE(),'yyyyMMdd') 
,case
when AccountBillings.Id is null then TenantServices.CreationTime
else AccountBillings.BillDateTo end --
,case 
when AccountBillings.Id is null and InfoSeedServices.ServiceFrquencyId = 3  then DATEADD(month,1,TenantServices.CreationTime)
when AccountBillings.Id is not null and InfoSeedServices.ServiceFrquencyId = 2  then DATEADD(month,4,AccountBillings.BillDateTo)
when AccountBillings.Id is null and InfoSeedServices.ServiceFrquencyId = 2  then DATEADD(month,4,TenantServices.CreationTime)
else  dateadd(month,1, AccountBillings.BillDateTo) end
,TenantServices.ServiceFees
,TenantServices.ServiceFees
, TenantServices.InfoSeedServiceId
, InfoSeedServices.ServiceTypeId
,1
FROM            TenantServices INNER JOIN
                         InfoSeedServices ON TenantServices.InfoSeedServiceId = InfoSeedServices.Id INNER JOIN
                         ServiceTypes ON InfoSeedServices.ServiceTypeId = ServiceTypes.Id INNER JOIN
                         ServiceFrquencies ON InfoSeedServices.ServiceFrquencyId = ServiceFrquencies.Id 
						 left JOIN   AccountBillings ON TenantServices.TenantId = AccountBillings.TenantId AND TenantServices.InfoSeedServiceId = AccountBillings.InfoSeedServiceId
WHERE        (TenantServices.IsDeleted = 0) 
AND (InfoSeedServices.ServiceFrquencyId <> 1) 
and (AccountBillings.Id = (
select max(Id) from AccountBillings as AB 
where AB.TenantId = AccountBillings.TenantId 
and AB.InfoSeedServiceId = AccountBillings.InfoSeedServiceId)
or AccountBillings.Id is null)

and 

(case
when AccountBillings.Id is null then TenantServices.CreationTime
else  AccountBillings.BillDateTo end) <= getdate()

--and AccountBillings.BillDateTo <> AccountBillings.BillDateFrom

END
GO
PRINT N'Creating [dbo].[ActiveContactPerMonthUpdate]...';


GO
-- =============================================
-- Author:		<Mustafa Snaid>
-- Create date: <2-4-2021>
-- Description:	<ActiveContactPerMonthUpdate>
-- =============================================
CREATE PROCEDURE [dbo].[ActiveContactPerMonthUpdate] 
@UserId nvarchar(250),
@MessageDate datetime
AS
BEGIN
	declare @contactId int,
	@tenantId int

	select @contactId=id,@tenantId=TenantId from Contacts where UserId = @UserId

	if(@tenantId is not null and @contactId is not null)
	begin

	if exists (select * from [dbo].[ActiveContactPerMonth] where month(@MessageDate) = [Month] and year(@MessageDate) = [Year] and ContactId = @contactId)
begin
update [dbo].[ActiveContactPerMonth] 
set LastMessageDateTime = @MessageDate
where ContactId = @contactId and year(LastMessageDateTime) = [Year] and month(@MessageDate) = [Month] 

end
else
begin

	INSERT INTO [dbo].[ActiveContactPerMonth]
           ([TenantId]
           ,[Year]
           ,[Month]
           ,[LastMessageDateTime]
           ,[ContactID])
     VALUES
           (@tenantId
           ,year(@MessageDate)
           ,month(@MessageDate)
           ,@MessageDate
           ,@contactId)

		   end
		   end

END
GO
PRINT N'Creating [dbo].[ContactsAdd]...';


GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[ContactsAdd]
	-- Add the parameters for the stored procedure here
	 
	  @TenantId int 
	  ,@AvatarUrl  nvarchar(512)=null
      ,@DisplayName  nvarchar(512)
      ,@PhoneNumber  nvarchar(512) =null
      ,@SunshineAppID  nvarchar(512)
      ,@IsLockedByAgent bit
      ,@LockedByAgentName nvarchar(512) =null
      ,@IsOpen bit
      ,@Website nvarchar(512) =null
      ,@EmailAddress nvarchar(512) =null
      ,@Description nvarchar(max) =null
      ,@ChatStatuseId int =2
      ,@ContactStatuseId int =2
      ,@CreationTime datetime2(7)
      ,@CreatorUserId bigint
      ,@DeleterUserId bigint=null
      ,@DeletionTime  datetime2(7) =null
      ,@IsDeleted bit=null
      ,@LastModificationTime datetime2(7) =null
      ,@LastModifierUserId bigint= null
      ,@UserId nvarchar(max)
      ,@IsConversationExpired bit
      ,@IsBlock bit
	 
AS
BEGIN
	INSERT INTO [dbo].[Contacts]
           ([TenantId]
           ,[AvatarUrl]
           ,[DisplayName]
           ,[PhoneNumber]
           ,[SunshineAppID]
           ,[IsLockedByAgent]
           ,[LockedByAgentName]
           ,[IsOpen]
           ,[Website]
           ,[EmailAddress]
           ,[Description]
           ,[ChatStatuseId]
           ,[ContactStatuseId]
           ,[CreationTime]
           ,[CreatorUserId]
           ,[DeleterUserId]
           ,[DeletionTime]
           ,[IsDeleted]
           ,[LastModificationTime]
           ,[LastModifierUserId]
           ,[UserId]
           ,[IsConversationExpired]
           ,[IsBlock])
     VALUES
           (@TenantId
            ,@AvatarUrl  
            ,@DisplayName 
            ,@PhoneNumber 
            ,@SunshineAppID  
            ,@IsLockedByAgent 
            ,@LockedByAgentName 
            ,@IsOpen
            ,@Website 
            ,@EmailAddress
            ,@Description 
            ,@ChatStatuseId 
            ,@ContactStatuseId 
            ,@CreationTime
            ,@CreatorUserId 
            ,@DeleterUserId
            ,@DeletionTime  
            ,@IsDeleted 
            ,@LastModificationTime 
            ,@LastModifierUserId 
            ,@UserId 
            ,@IsConversationExpired
            ,@IsBlock )
END
GO
PRINT N'Creating [dbo].[LocationAdd]...';


GO
-- =============================================
-- Author:		<Mustafa Snaid>
-- Create date: <25-4-2021>
-- Description:	<Add Location Delivery Cost>
-- =============================================
CREATE PROCEDURE [dbo].[LocationAdd] 
	@LocationId int,
	@DeliveryCost decimal(18,3),
	@TenantId int,
	@BranchAreaId int
AS
BEGIN
if not exists(select * from LocationDeliveryCost where [TenantId] = @TenantId and [LocationId] = @LocationId)
begin
insert into LocationDeliveryCost 
values(@TenantId,@LocationId,@DeliveryCost,@BranchAreaId)
end
else
begin
update LocationDeliveryCost
	set DeliveryCost = @DeliveryCost ,	BranchAreaId = @BranchAreaId
	where [TenantId] = @TenantId and [LocationId] = @LocationId
	end
END
GO
PRINT N'Creating [dbo].[LocationDelete]...';


GO
-- =============================================
-- Author:      <Author, , Name>
-- Create Date: <Create Date, , >
-- Description: <Description, , >
-- =============================================
CREATE PROCEDURE LocationDelete
(
  @LocationId int,
  @TenantId int
)
AS
BEGIN
   delete from [dbo].[LocationDeliveryCost] where LocationId =@LocationId and TenantId=@TenantId
END
GO
PRINT N'Creating [dbo].[LocationEdit]...';


GO
-- =============================================
-- Author:		<Mustafa Snaid>
-- Create date: <25-4-2021>
-- Description:	<Edit Location Delivery Cost>
-- =============================================
CREATE PROCEDURE [dbo].[LocationEdit] 
	@LocationId int,
	@DeliveryCost decimal(18,3),
	@TenantId int,
	@BranchAreaId int
AS
BEGIN
	update LocationDeliveryCost
	set DeliveryCost = @DeliveryCost,	BranchAreaId = @BranchAreaId
	where [TenantId] = @TenantId and [LocationId] = @LocationId
END
GO
PRINT N'Creating [dbo].[LocationsGet]...';


GO

-- =============================================
-- Author:		<Mustafa Snaid>
-- Create date: <25-4-2021>
-- Description:	<GetLocations>
-- =============================================
CREATE PROCEDURE [dbo].[LocationsGet]
	 @TenantId int
	,@LocationId int =null
AS
BEGIN

SELECT       LocationDeliveryCost.BranchAreaId, LocationDeliveryCost.DeliveryCost, Locations.Id, Locations.LocationName, Locations.LevelId, Locations.ParentId, Locations.GoogleURL, Locations.LocationNameEn, Locations_1.LocationName AS AreaName,Locations_1.Id AS AreaId, 
                         Locations_2.LocationName AS CityName,Locations_2.Id AS CityId
FROM            LocationDeliveryCost INNER JOIN
                         Locations ON LocationDeliveryCost.LocationId = Locations.Id  AND LocationDeliveryCost.TenantId = @TenantId INNER JOIN
                         Locations AS Locations_1 ON Locations.ParentId = Locations_1.Id INNER JOIN
                         Locations AS Locations_2 ON Locations_1.ParentId = Locations_2.Id
						 where LocationDeliveryCost.LocationId in (select Id from Locations where ParentId = @LocationId)
END
GO
PRINT N'Creating [dbo].[LocationsGetByParentId]...';


GO
-- =============================================
-- Author:		<Mustafa Snaid>
-- Create date: <25-4-2021>
-- Description:	<Get Locations By ParentId>
-- =============================================
CREATE PROCEDURE [dbo].[LocationsGetByParentId] 
	@ParentId int
AS
BEGIN
SELECT        Id, LocationName, LevelId, ParentId, GoogleURL, LocationNameEn
FROM            Locations
WHERE        (ParentId = @ParentId)END
GO
PRINT N'Creating [dbo].[LocationsGetRoots]...';


GO
-- =============================================
-- Author:		<Mustafa Snaid>
-- Create date: <25-4-2021>
-- Description:	<Get Root Locations>
-- =============================================
CREATE PROCEDURE [dbo].[LocationsGetRoots]
	
AS
BEGIN
	SELECT        Id, LocationName, LevelId, ParentId, GoogleURL, LocationNameEn
FROM            Locations
WHERE        (ParentId IS NULL)
END
GO
PRINT N'Creating [dbo].[TenantServicesGet]...';


GO
-- =============================================
-- Author:		<Mustafa Snaid>
-- Create date: <2-1-2021>
-- Description:	<Get Tenant Services>
-- =============================================
CREATE PROCEDURE [dbo].[TenantServicesGet] 
	@TenantId	int
AS
BEGIN

select
@TenantId as TenantId
,InfoSeedServices.Id as ServiceId
,InfoSeedServices.ServiceName
,InfoSeedServices.ServiceFees as Fees
,cast(0 as bit) as IsSelected
,getdate() as TenantServiceCreationTime into #AllServices from InfoSeedServices 


update  #AllServices
set IsSelected = cast(1 as bit)
,TenantServiceCreationTime = TS.CreationTime
, Fees = ISNULL(TS.ServiceFees,S.Fees)

from
#AllServices as S
inner join TenantServices as TS 
on S.ServiceId = TS.InfoSeedServiceId and ts.TenantId = @TenantId

select * from #AllServices

drop table #AllServices

--SELECT        TenantServices.TenantId,
--InfoSeedServices.Id AS ServiceId,
--InfoSeedServices.ServiceName, 
--ISNULL(TenantServices.ServiceFees, 
--InfoSeedServices.ServiceFees) AS Fees, 
--TenantServices.CreationTime as TenantServiceCreationTime,
--case when TenantServices.Id is null then cast(0 as bit) else cast(1 as bit) end as IsSelected
--FROM            TenantServices RIGHT OUTER JOIN
--                         InfoSeedServices ON TenantServices.InfoSeedServiceId = InfoSeedServices.Id
--WHERE        (TenantServices.TenantId = @TenantId) OR
--                         (TenantServices.Id IS NULL)
END
GO
PRINT N'Creating [dbo].[TenantServicesUpdate]...';


GO

-- =============================================
-- Author:		<Mustafa Snaid>
-- Create date: <4-1-2021>
-- Description:	<Update Tenant Services>
-- =============================================
CREATE PROCEDURE [dbo].[TenantServicesUpdate] 
	@TenantId int,
	@Services nvarchar(256) --Comma Seperator 
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	
	delete from TenantServices where TenantId = @TenantId and InfoSeedServiceId not in (select [value] from STRING_SPLIT(@Services,','))

	INSERT INTO [dbo].[TenantServices]
           ([CreationTime]
           ,[CreatorUserId]
           ,[LastModificationTime]
           ,[LastModifierUserId]
           ,[IsDeleted]
           ,[DeleterUserId]
           ,[DeletionTime]
           ,[TenantId]
           ,[ServiceFees]
           ,[InfoSeedServiceId])
	select 
	getdate()
	,1
	,NULL
	,NULL
	,0
	,NULL
	,NULL
	,@TenantId
	,InfoSeedServices.ServiceFees
	,InfoSeedServices.Id
	from STRING_SPLIT(@Services,',') 
	--left join TenantServices on TenantServices.InfoSeedServiceId =[value] 
	inner join InfoSeedServices on InfoSeedServices.Id = [value]
	--where TenantServices.Id is null

END
GO
PRINT N'Creating [dbo].[TenantsGet]...';


GO
-- =============================================
-- Author:		<Mustafa Snaid>
-- Create date: <19-1-2021>
-- Description:	<GetTenants>
-- =============================================
CREATE PROCEDURE [dbo].[TenantsGet] 
	
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

   select * from  AbpTenants
END
GO
DECLARE @VarDecimalSupported AS BIT;

SELECT @VarDecimalSupported = 0;

IF ((ServerProperty(N'EngineEdition') = 3)
    AND (((@@microsoftversion / power(2, 24) = 9)
          AND (@@microsoftversion & 0xffff >= 3024))
         OR ((@@microsoftversion / power(2, 24) = 10)
             AND (@@microsoftversion & 0xffff >= 1600))))
    SELECT @VarDecimalSupported = 1;

IF (@VarDecimalSupported > 0)
    BEGIN
        EXECUTE sp_db_vardecimal_storage_format N'$(DatabaseName)', 'ON';
    END


GO
PRINT N'Update complete.';


GO
